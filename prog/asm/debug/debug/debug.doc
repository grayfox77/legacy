



           ＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
               ＡＲ-ＤＥＢＵＧ      取扱い説明書
           ＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊
                   Ａｒｉａｋｉｒａｓｏｆｔ
           ＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊＊




    [ＡＲ-ＤＥＢＵＧの解説]

  本プログラムは､ＭＳＸ-ＤＯＳ上で使う高機能デバッガです｡
  ＭＳＸ用のデバッガといえばＡＳＣＩＩ製のＭＳＸ Ｓ-ＢＵＧがあ
りますが､ちょっと高くて自分には買えません｡
  また､正確にはモニタだそうですがＲｏｍｉ.氏作のＬｏｒｄなんて
素晴らしい物もありました｡しかし､これはＢＡＳＩＣ向けのプログラ
ム(CALL @で起動)なのでＣＯＭプログラムのデバッグには不向きで､ま
たＤＯＳから使うには起動に時間がかかるところが玉に傷でした｡
  そこで登場したのがこのＡＲ-ＤＥＢＵＧです｡以下のような特徴が
あります｡

・ＭＳ-ＤＯＳの標準添付(?)デッバガ"DEBUG.COM"(or"SYMDEB.EXE")の
操作体系を生かし､独自の機能を追加｡
・プログラム本体を高位アドレス(B800h固定)に転送することにより､
ＴＰＡ４６ｋの大規模ＣＯＭプログラムのデバッグが可能｡
・ザイログニーモニックのラインアセンブラ及び逆アセンブラ搭載｡
・各ドライブの論理セクタによる直接操作が可能｡もちろんファイルア
クセスも可能｡
・ＢＩＯＳ直接呼び出しにより､マルチスクリーンでＤＯＳファンクシ
ョンコールよりも(若干ですが)高速なテキスト表示を実現｡




    [ＡＲ-ＤＥＢＵＧの起動]

  ＤＯＳプロンプトから､

A>DEBUG [filename]  (リターン)

で､実行できます｡
  filenameを指定すると､そのファイルを0100hからのＴＰＡに自動的
に呼び出し､また､Ｗコマンド及びＬコマンド(後述)用に記録します｡




    [ＡＲ-ＤＥＢＵＧの終了]

  ＡＲ-ＤＥＢＵＧは､以下の２つの方法で終了できます｡

１．｢-｣プロンプト(後述)から､Ｑコマンドを実行する｡
２．[Ctrl]+[C] or [Ctrl]+[STOP]を押す｡

  終了後､カレントドライブより"COMMAND.COM"を読み込みますので､カ
レントドライブにシステムディスクをセットしておいて下さい｡




    [ＤＥＢＵＧコマンド]

  ＡＲ-ＤＥＢＵＧ起動後は､｢-｣(マイナス)のプロンプトに続けて後に
示すＤＥＢＵＧコマンドを実行できます｡
  コマンドは､半角アルファベット１文字のコマンド名に続けて必要な
らばパラメータを付け､リターンキーを押すことにより実行されます｡
  コマンド名のアルファベットの大文字小文字は区別されません｡


    ＜パラメータに関する注意＞

  パラメータはスペースで区切って入力します｡
  数値のパラメータは全て１６進数で､１ワードの範囲を越えるとエ
ラーとなります｡
  角括弧[ ]で囲まれたパラメータは､省略することができます｡
  大括弧{ }で囲まれたパラメータは､|で区切られたうちの一つを必ず
指定します｡


    ＜コマンド一覧＞

  ？・・・ＤＥＢＵＧコマンドの一覧を表示する
  Ａ・・・ニーモニックをアセンブルしてメモリに格納する
  Ｃ・・・２つのメモリ領域の内容を比較し相違点を表示する
  Ｄ・・・メモリ内容のダンプリストを表示する
  Ｅ・・・メモリにデータを入力する
  Ｇ・・・プログラムを実行する
  Ｈ・・・１６進数の加算を行う
  Ｉ・・・Ｉ/Ｏポートからデータを入力する
  Ｋ・・・ファンクションキーの設定を行う
  Ｌ・・・ファイル又はセクタの内容をディスクから読み込む
  Ｍ・・・メモリ内でデータを複写する
  Ｎ・・・Ｌ及びＷコマンドで使用するファイル名を指定する
  Ｏ・・・Ｉ/Ｏポートにデータを出力する
  Ｑ・・・ＡＲ-ＤＥＢＵＧを終了する
  Ｒ・・・レジスタの内容を表示または変更する
  Ｓ・・・メモリからデータを検索する
  Ｔ・・・プログラムの実行を追跡する
  Ｕ・・・マシン語を逆アセンブルして表示する
  Ｗ・・・メモリ内容をディスクに書き込む
  Ｘ・・・マシンの詳細を表示する｡


    ＜？helpコマンド＞

[機能]  ＤＥＢＵＧコマンドの一覧を表示します｡

[書式]  -?

[解説]  全てのコマンドとそのパラメータに関するヘルプメッセージ
        を表示します｡英語です｡


    ＜Ｄumpコマンド＞

[機能]  メモリ内容のダンプリストを表示します｡

[書式]  -D [開始アドレス [終了アドレス]]

[解説]  指定メモリの内容を､１６進数とキャラクタで１行につき１６
        バイトずつ表示します｡そのため､終了アドレスより先まで表
        示されることもあります｡
        終了アドレスを省略すると､開始アドレスから１２８バイト分
        (８行)表示します｡
        開始アドレスも省略すると､最後にアクセスした次のアドレス
        から１２８バイト表示します｡

[例]    -D 100 200
        0100hから020Fhまでのダンプリストを表示します｡

        -DC01E
        C01EhからC09Dhまでのダンプリストを表示します｡


    ＜Ｅnterコマンド＞

[機能]  メモリにデータを入力します｡

[書式]  -E [開始アドレス [データ1 [データ2...]]]

[解説]  指定メモリに"データ"を１バイトずつ順に書き込みます｡
        "データ"を省略した場合､｢アドレス:値>｣という形式のプロン
        プトに続けて､入力できます｡(本当はこっちがメイン)
        この時､開始アドレスも省略すると､最後にアクセスした次の
        バイトからの入力ができます｡
        １６進数は､数字キーと[A]〜[F]及び[/]〜[.](テンキーで順
        にＡ〜Ｆと対応)で入力します｡２字入力する毎に自動的に１
        バイト進みますので､[RETURN]の入力は不要です｡
        もし１文字目を間違えた場合､[BS]で修正できます｡
        [＾][上]で１バイト前に戻れます｡
        [SPACE][下]で１バイトスキップして次に進みます｡
        [ESC][RETURN]で入力を終了します｡

[例]    -E 100 C3 05 0 0C9
        0100hから順に､CD,05,00,C9 を書き込みます｡


    ＜Ｆillコマンド＞

[機能]  指定メモリを､値で埋めます｡

[書式]  -F 開始アドレス 終了アドレス [値]

[解説]  指定メモリを"値"で埋めます｡
        "値"を省略すると､０(ゼロ)で埋めます｡

[例]    -F100 200 FF
        0100hから02FFhまでの領域をすべて255で埋めます｡


    ＜Ｇoコマンド＞

[機能]  プログラムの実行をします｡

[書式]  -G アドレス [ブレークポイント...]

[解説]  レジスタ保存エリアから各レジスタに内容を読み込み､指定
　　　　アドレスのプログラムを実行します｡
        ブレークポイントで強制終了するアドレスを１０個まで設定
        できます｡
        RET(C9h)又はブレークポイントが実行されるか､0000h番地へ
        のコール及びジャンプが行われるとデバッガに復帰します｡
        スタックも保存されますので､実行前や実行中にPUSHなどを
        すると､RETでは戻れなくなることもあります｡但し､RST 00h
        (C7h)による復帰には対応しています｡
        プログラム終了後､各レジスタの内容を表示し､レジスタ保
        存エリアに保存します｡
        ブレークポイントはそのアドレスに､RST 00h(C7h)を直接書
        き込むことにより実現されています｡そのため､同アドレスを
        参照･操作しているプログラムでは正しく動作しないことも
        あります｡


[例]    -G 100
        0100hからのプログラムを実行します｡


    ＜Ｈexコマンド＞

[機能]  １６進数の加算を行い､結果を表示します｡

[書式]  -H 値 [値 [値...]]

[解説]  全てのパラメータの和を計算し､結果を｢１６進数４桁/１０進
        数/２進数１６桁｣の順で表示します｡
        計算は常に１ワード(１６ビット符合なし)の範囲内で行われ､
        オーバーフローは関知しません｡
        パラメータを一つにして､単に１６進数から１０進数へのコン
        バータとしても利用できます｡

[例]    -H 123 456 789
        計算結果の｢0D11h/6262/0000110100010001｣が表示されます｡

        -H8000 9876
        本来は｢11876h/71798/･･･｣のはずですが､結果が１６ビットを
        越えてしまい､｢1876h/6262/･･･｣と表示されます｡


    ＜Ｉnputコマンド＞

[機能]  Ｉ/Ｏポートからデータを読み取ります｡
[書式]  -I [ポート番号 [個数]]

[解説]  指定Ｉ/Ｏポートから１バイトデータを読み取って｢１６進数/
        ２進数/１０進数｣の順に指定個数分表示します｡
        ポート番号を省略した場合､前回と同じポートから読み取り
        ます｡個数を省略した場合､１となります｡
        また､読み込んではならないポートもありますので､気を付け
        て使って下さい｡


    ＜Ｋeyコマンド＞

[機能]  ファンクションキーの設定をします｡

[書式]  -K {番号 文字列|ON|OFF|!}

[解説]  ４つのパラメーターのうちの１つを入力します｡
        "番号"で指定されたファンクションキーに"文字列"を設定し
        ます｡"番号"に[F1]〜[F9]は"1"〜"9"[F10]は"0"を指定しま
        す｡"文字列"は半角１５文字までで､以降は無視されます｡文字
        中の";"は自動的に[RETURN]に変換されます｡
        "ON"で､ファンクションキー表示をオンにします｡
        "OFF"で､ファンクションキー表示をオフにします｡
        "!"は､ファンクションキーの内容を初期化します｡

[例]    -K 1 Ariakirasoft AS-DEBUG
        [F1]に"Ariakirasoft AS"を設定します｡

        -K0D100 1FF;G100;
        以降[F10]で"D100 1FF"と"G100"を一気に実行できます｡


    ＜Ｌoadコマンド＞

[機能]  ファイル又はセクタの内容をディスクから読み込む｡

[書式]  -L アドレス [ドライブ番号 開始セクタ セクタ数]

[解説]  ディスクから指定アドレスに､データを読み込みます｡
        指定ドライブ(Ａ=０〜Ｈ=７)から､"開始セクタ"からの"セク
        タ数"分を指定メモリに読み込みます｡
        アドレス以外のパラメータを省略した場合､Ｎコマンドで指定
        したファイルを指定アドレスに読み込みます｡
        コマンド入力後確認メッセージが表示されますので､実行して
        よいならば"Y"又は[RETURN]を入力して下さい｡それ以外を入
        力した場合､キャンセルされます｡

［例］  -L100 0 7 7
        Ａドライブの第７セクタから７セクタ分(ディレクトリ部分)
        を0100hからに読み込みます｡

        -L 4000
        前もってＮコマンドで指定したファイルを､4000hからに読み
        込みます｡ファイルは､最後まで読み込まれます｡


    ＜Ｍoveコマンド＞

[機能]  メモリ内でデータを複写します｡

[書式]  -M 複写元先頭アドレス 終了アドレス 複写先アドレス

[解説]  "複写元アドレス"から"複写先アドレス"に"バイト数"分複写
        します｡
        二つの領域が重なっていた場合にも対応しています｡


    ＜Ｎameコマンド＞

[機能]  使用するファイル名を指定又は表示します｡

[書式]  -N [[ドライブ:]ファイル名[.タイプ名]]

[解説]  ドライブ名及びタイプ名は省略できます｡ドライブ名を省略し
        た場合､ディフォルトドライブ指定となります｡
        パラメータを全て省略すると､現在指定されているファイル名
        を表示します｡

[例]    -N DEBUG.COM
        ディフォルトドライブの"DEBUG.COM"を指定します｡


    ＜Ｏutputコマンド＞

[機能]  Ｉ/Ｏポートにデータを出力します｡

[書式]  -O ポート番号 値1 [値2..]

[解説]  指定Ｉ/Ｏポートに１バイトずつデータを順に書き込みます｡

[例]    -O99 80 A3
        Ｉ/Ｏポート99hに80h,A3hの順に出力します｡具体的にはＶＤ
        Ｐレジスタ#23を設定し､画面のハードスクロールを行います｡


    ＜Ｑuitコマンド＞

[機能]  ＡＲ-ＤＥＢＵＧを終了します｡

[書式]  -Q

[解説]  ＡＲ-ＤＥＢＵＧを終了し､"COMMAND.COM"に処理を移します｡


    ＜Ｒegistorコマンド＞

[機能]  各レジスタの内容を表示･書き換えします｡

[書式]  -R [レジスタ名 値]

[解説]  指定レジスタの値を､レジスタ保存エリアに登録します｡
        使用できるレジスタは
            ８ビット　Ａ,Ｂ,Ｃ,Ｄ,Ｅ,Ｈ,Ｌ,Ｆ
            16ビット　ＡＦ,ＢＣ,ＤＥ,ＨＬ,ＩＸ,ＩＹ,ＳＰ
        及びその裏レジスタです｡(ＩＸ,ＩＹ,ＳＰレジスタを除く)
　　　　パラメータを省略した場合､全レジスタの内容及びフラグの
　　　　状態を表示します｡



    ＜Ｔraceコマンド＞

[機能]  プログラムの実行を追跡する

[書式]  -T アドレス [命令数]

[解説]  指定アドレスから始まるプログラムを､逆アセンブルしながら
    　　指定命令数だけ実行し､全レジスタの内容を表示します｡
        アドレスを省略した場合､最後に実行した次の命令から実行し
        ます｡
        命令数を省略した場合､一つだけ実行します｡



    ＜Ｕnasmコマンド＞

[機能]  マシン語を逆アセンブルして表示します｡

[書式]  -U [開始アドレス]

[解説]  開始アドレスからのメモリにあるマシン語を逆アセンブルし､
        そのオペコードとザイログ形式のニーモニックを８行表示します｡
        開始アドレスを省略すると､最後にアクセスした次のアドレス
        から逆アセンブルします｡

[例]    -U0
        0000hからのシステムスクラッチエリアにあるプログラムを逆
        アセンブルし､８行分(多分000Ahまで)表示します｡システムの
        高位アドレスへのジャンプテーブルがあるはずです｡

        -U
        その続きを表示します｡


    ＜Ｗriteコマンド＞

[機能]  メモリの内容をディスクに書き込む｡

[書式]  -W 開始アドレス ドライブ番号 開始セクタ セクタ数   (イ)
        -W 開始アドレス 終了アドレス                       (ロ)

[解説]  指定アドレスの内容をディスクに書き込みます｡
        (イ)ディスクにセクタ単位の書き込みを行います｡
        "ドライブ番号"(Ａ=０〜Ｈ=７)で指定したドライブの､"開始
        セクタ"から"セクタ数"分の指定アドレスから始まるメモリの
        内容を書き込みます｡
        (ロ)ディスクにファイルで書き込みを行います
        指定アドレスのメモリの内容を､Ｎコマンドで指定したファイ
        ルに書き込みます｡

[例］   -W 100 1 0 1
        0100hから02FFhを､Ｂドライブの第０セクタ(ブートセクタ)に
        書き込みます｡

        -W0C00 CFF
        前もってＮコマンドで指定したファイルに､OC00hからOCFFhの
        内容を書き込みます｡


    ［スロット及びマッパーＲＡＭの補足］

  本デバッガは､ＭＳＸ-ＤＯＳで選択されているメインＲＡＭのみを
サポートし､その他のスロットやマッパーＲＡＭの切り換えには対応し
ていません｡理由としては､メモリの切り換えは動作を不安定にしてし
まうことなどが挙げられますが､実は作者がマッパーサポートルーチン
に関する資料を持っていないからでもあったりします｡(･･･ｺﾞﾒﾝﾅｻｲ)
  自分のプログラムをデバッグするだけであれば､本来スロット切り換
えは必要ありませんが､もしどうしても必要なのであれば空きメモリー
に自分でプログラムを組んで使用して下さい｡一応ＭＳＸ-ＤＯＳ上な
ので普通にインタースロットルーチンを使用することができます｡
  マッパーＲＡＭは､海外のＭＳＸ２では標準搭載のようですが､日本
のＭＳＸ２(ＲＡＭ６４ｋ)では搭載されていないことがあります｡ＲＡ
Ｍが６４ｋよりも大きい機種では確実に搭載されています｡
  マッパーは本来サポートルーチンを用いて使用するはずだと思いま
すが､Ｉ/ＯポートのＦＣｈ(ページ１用/初期値３)〜ＦＦｈ(４用/０)
でセグメントを直接指定することによっても切り換えられます｡セグメ
ントは１６ｋ単位に最高２５５までの通し番号で指定します｡
  ＡＲ-ＤＥＢＵＧ上からはＯコマンドを使用して設定できます｡




    [作者余談]

  この原稿は､私のセカンドマシンである某世界標準機(純正)の上で
書かれています｡
  このパソコンは３２bitＣＰＵ/ＲＡＭ２MB/６４０×４８０ドット/
ＨＤＤ４０MB/ＦＤＤ１.４４MBと､愛機ＦＳ-Ａ１ＷＳＸ(Panasonic)
とくらべたら天国のような環境ではありますが､時代遅れでウインド
ウも動かず､他に用途もないので､もったいないとは思いつつもディス
ク管理とワープロぐらいにしか使っておりません｡
  でも､速くていいです｡アーカイバＬＨＡでは解凍が本当にアッとい
う間に終わっています｡この味をしめたらもうＰＭｅｘｔは使えませ
んでした｡だから､拡張子".PMA"のファイルには困ってしまいます｡
  また､ファイルマネージャＦＤは高機能かつ便利でもう最高です｡Ｍ
ＳＸのフロッピーも読み書きでき､コピー･管理･復活(これはＤＯＳの
機能)が簡単で重宝しています｡このようなものがＭＳＸにもあってほ
しいですが､ＡＥＧ･ＦＭＴＭ共まだまだの感が否めません｡
  でもＰＭｅｘｔ･ＡＥＧ･ＦＭＴＭどれもすばらしいソフトなので､
十分利用価値があると思います｡頑張って下さい｡
  ところでワープロですが､こいつは米国産で使いやすいとは言い難
いものがあります｡ＭＳＸのワープロ･エディタでいいものを知らない
ので(含内蔵ワープロ)､こいつを使っとります｡
  やっぱり速いのはいいです｡ターボＲよりも速いもん｡高いけどね｡

  このソフトＡＲ-ＤＥＢＵＧは､この機械に付いていた"DEBUG.COM"
(一部では"SYMDEB.EXE"というらしい)の機能を参考にして､ＭＳＸ用
に手を加えて発展させたものです｡
　本当はこんなプログラムを組むつもりはなかったのですが､その昔
に作っていたアセンブリプログラムが大きくなり過ぎてしまい､愛用
していた"ASM.COM"(MSX-DOSﾊﾝﾄﾞﾌﾞｯｸ)でアセンブル出来ないという事
態に陥りました｡でも"M80.COM"と"L80.COM"(MSX-DOS TOOLS)は遅過ぎ
て使い物にならないので､アセンブラを自作することにし､そこで他の
アセンブラを解析しようと､デバッガを作り始めたのがきっかけです｡
  しかしその後Ｌｏｒｄ"LORD"(MSX-FAN/Romi)が発表され､ＶＲＡＭ
ディスクドライバ"RAMDSK.COM"(MSX-C入門)も手に入れたので､デバッ
ガを作る理由が無くなってしまいましたが､まあいいでしょう｡
  しかし､いまではデバッガのプログラム自体も大きくなってしまい､
Ｍ８０を使ってアセンブルしているというのも皮肉なものです｡




    [作者使用環境]

本体:           ＭＳＸ２＋  松下FS-A1WSX 6MHz高速モード
ドライブ構成:   内蔵ＦＤＤ(Ａ/Ｂ) 120KＶＲＡＭドライブ(Ｃ)
ディスプレイ:   アナログＲＧＢ  松下TH-14G2
プリンタ:       ４８ドットカラーサーマル  松下FS-PC1

    お恥ずかしい...拡張法を知らず､お金もないので...だれか教えて




    [参考]

　本プログラム及び本マニュアルの作成に当たり､主に以下の文献を参
考にさせていただきました｡
｢ＭＳＸ-Ｃ入門 上巻｣
｢ＭＳＸ-ＤＯＳハンドブック｣
｢ＭＳＸ-Ｄａｔａｐａｃｋ｣                       アスキー
｢ＭＳＸ２テクニカルハンドブック｣                アスキー
｢ＭＳＸテクニカルハンドブック 第４版｣           アスキャット
｢月刊ＭＳＸ-ＦＡＮ｣                             徳間書店

ＭＳＸ及びＭＳＸ-ＤＯＳは株式会社アスキーの商標です｡
ＬＨＡは
ＰＭｅｘｔは美濃吉彦氏のフリーウエアです
ＦＤは射出厚氏のフリーウエアです
ＦＭＴＭは
ＡＥＧは
