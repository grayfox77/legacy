                     ЭКРАННЫЙ ОТЛАДЧИК

                         DBG

                         Версия 5.1

                          MSX/MSX2

                Как пользоваться отладчиком


                        Леонид БАРАЗ


                      В тексте данного документа применяются
                      следующие  обозначения:  в   уголковые
                      скобки < и > берутся  названия  специ-
                      альных  клавиш;  пробелом  разделяются
                      клавиши, которые нужно нажимать после-
                      довательно, а плюсом - одновременно.


     1. Как начать работу с отладчиком.

     Использовать отладчик DBG можно только в среде операци-
онной системы MSX-DOS, когда на экране имеется приглашение
       A>
или
       a>
     В ответ на это приглашение  необходимо  набрать  DBG  и
нажать  клавишу  <ret> ("возврат  каретки").   После   этого
отладчик (если он имеется на диске) загрузится в память ПЭВМ
и на экране появится начальная информация.


     2. Что находится на экране.

     Сразу после входа в отладчик экран имеет следующий вид:
EB>
X02000RWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWRWWWWWWWWWWWWWWWWY
VList V DEBUGGER Version 5.1        Help:<Esc>?  Visual:No    V EI PC=0100 I=00V
TWWWWWUWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWRWWWWS32/32/32/32 R=5BV
V     V       0100:F3           DI                       V    VFB/FA/F9/F8 +MAPV
V     V       0101:D9           EXX                      V    VT=87A8:D06F/EBC3V
V     V       0102:2A 06 00     LD    HL,(0006)          V    TWWWWWWWWWWWWWWWWS
V     V       0105:B7           OR    A                  V    V A=00 . szxhxpncV
V     V       0106:01 00 02     LD    BC,0200            V    V BC=0000: C3 "ц"V
V     V       0109:ED 42        SBC   HL,BC              V    V DE=0000: C3 "ц"V
V     V       010B:B7           OR    A                  V    V HL=0000: C3 "ц"V
V     V       010C:ED 4B 81 01  LD    BC,(0181)          V    V IX=0000: C3 "ц"V
V     V       0110:ED 42        SBC   HL,BC              V    V IY=0000: C3 "ц"V
V     V       0112:EB           EX    DE,HL              V    TWWWWWWWWWWWWWWWWS
V     V       0113:06 BE        LD    B,BE               V    VA'=00 . szxhxpncV
V     V       0115:0E 02        LD    C,02               V    VBC'=0000: C3 "ц"V
V     V       0117:D9           EXX                      V    VDE'=0000: C3 "ц"V
V     V       0118:21 7F 02     LD    HL,027F            V    VHL'=0000: C3 "ц"V
TWRWWWQWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWQWWWWUWWWWWWWWWWWWWWWWS
V V       0080:2B 2B 2B 2B 2B 2B 2B 2B 2B 2B 2B 2B 2B 2B 2B 2BV++++++++++++++++V
V V       0090:2B 20 20 20 20 20 20 20 20 20 20 20 20 20 20 2BV+              +V
V V       00A0:2B 20 20 F0 C5 D2 C5 C4 20 F7 C1 CD C9 20 20 2BV+  Перед Вами  +V
V V       00B0:2B 20 20 20 20 20 20 20 20 20 20 20 20 20 20 2BV+              +V
V V       00C0:2B 20 20 20 4D 53 58 32 20 44 42 47 20 20 20 2BV+   MSX2 DBG   +V
V V       00D0:2B 20 20 20 20 20 20 20 20 20 20 20 20 20 20 2BV+              +V
V V       00E0:2B 28 43 29 20 E2 C1 D2 C1 DA 2C 31 39 38 39 2BV+(C) Бараз,1989+V
V V       00F0:2B 2B 2B 2B 2B 2B 2B 2B 2B 2B 2B 2B 2B 2B 2B 2BV++++++++++++++++V
ZWQWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWQWWWWWWWWWWWWWWWW[
NA
     Все поля данных, имеющиеся сейчас на экране, сгруппиро-
ваны в три окна: дисассемблера (левое верхнее), дампа  (ниж-
нее) и регистров (правое верхнее). С помощью стрелок  курсор
можно перемещать только в пределах одного окна и  только  по
полям данных (курсор автоматически минует символы разметки и
рамки). Переход из окна в окно осуществляется с помощью спе-
циальных команд смены режима.
     В окне  дисассемблера  отображается  некоторый  участок
памяти машины с разбивкой на машинные команды и с  отображе-
нием этих команд в формате ассемблера  Z-80.  В  окне  дампа
располагаются данные из памяти или видеопамяти в  шестнадца-
тиричном и символьном виде. В  окне  регистров  отображается
состояние машины (значения регистров процессора и  некоторая
дополнительная информация).
     Над окном дисассемблера находится поле режима (сейчас -
слово "List") и заголовок. На месте  заголовка  в  некоторых
режимах работы отладчика располагается временное окно с  до-
полнительными полями.


     3. Как загрузить отлаживаемую программу.

     Проще всего загрузить программу автоматически  при  за-
пуске отладчика. Для этого достаточно указать имя  программы
в команде запуска:
        DBG PROG
     Чтобы загрузить программу, когда отладчик уже работает,
нужно нажать клавиши <esc> I. При этом отладчик переходит  в
режим ввода  программы,  и  на  месте  заголовка  появляется
дополнительное окно следующего вида:
EB>
X02000RWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWR
VInputV File:A:┬       .COM  Area:0100-87A9  Reloc:0100->0100 V
TWWWWWUWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWRWWWWS
NA
     В дополнительном окне располагаются поля имени файла  и
интервала адресов для размещения  программы.  В  поле  имени
файла необходимо набрать имя загружаемой  программы  (напри-
мер, PROG) и после этого нажать клавишу  "возврат  каретки".
Файл PROG.COM, содержащий программу, будет загружен в память
с адреса 0100, указанного в поле Area. Если в программе PROG
есть внешние имена, записанные в файл  PROG.SYM,  эти  имена
будут автоматически считаны, и в дальнейшей работе их  можно
будет использовать взамен соответствующих адресов.
     В  дополнительном  окне  имеются  поля  Area:,  которые
позволяют изменить  интервал  адресов,  предназначенных  для
загрузки программы. Поля Reloc: используются  для  настройки
символических имен на  нестандартный  начальный  адрес  про-
граммы.


     4. Как просматривать и корректировать команды.

     С этой целью используется режим дисассемблера,  который
устанавливается автоматически при входе в отладчик или после
загрузки программы. Из других режимов в  него  можно  войти,
набрав <esc> L.
     Чтобы настроить  окно  на  определенные  адреса  памяти
машины, нужно набрать адрес в соответствующем поле одной  из
строк. Окно можно  "передвинуть"  в  нужном  направлении  (к
меньшим адресам - вверх, к большим - вниз), подведя курсор к
соответствующему краю окна и продолжая нажимать стрелку вниз
или вверх. Можно также  перемещать  окно  по  тексту  целыми
"страницами" (размер которых совпадает с размером окна). Для
этого служат клавиши <ctrl>+J (вверх) и <ctrl>+Q (вниз).
     Байты команд, которые отображаются в  строке  дисассем-
блера, можно исправлять непосредственно на  экране.  Кстати,
заметим, что если некоторуй байт памяти "виден" в нескольких
точках экрана, при его изменении в одной  точке  меняются  и
все остальные изображения (экран обновляется полностью).
     Машинные команды  можно  изменять  на  экране  прямо  в
ассемблерном виде. Трансляция  команды  в  машинные  коды  и
запись в память происходит только в момент выхода из поля  с
помощью стрелок, "возврата каретки" и  т.п.  ВНИМАНИЕ:  Если
команда набрана с ошибкой, выйти из поля НЕ удастся, пока не
будет набрана правильная команда (в частности, можно  нажать
клавишу <home>, что вызовет просто  восстановление  прежнего
содержимого экрана). Для исправления команды на экране можно
использовать, помимо стрелок и  символьных  клавиш,  клавиши
<del>, <bs>, <ins>,  которые  действуют  в  пределах  одного
поля.


     5. Как использовать символические имена.

     Символические имена могут связываться  с  определенными
адресами памяти машины. Имя отображается в поле имени  перед
соответствующим  адресом  в  строках  окон  дисассемблера  и
дампа. В этом же поле можно определить новое имя для некото-
рого адреса, переопределить или отменить прежнее. Определить
или переопределить имя можно,  просто  набрав  новое  имя  в
данном поле. Для отмены старого имени надо поставить в  дан-
ном поле пробел и выйти из поля.
     Символические имена используются в записи машинных  ко-
манд (имя ставится перед соответствующим адресом  и  отделя-
ется от него двоеточием). Набирая текст команды, также можно
использовать имена, причем адрес  после  имени  набирать  не
нужно (однако двоеточие  требуется!).  Ниже  приводятся  три
варианта ввода ассемблерной команды:
         LD    A,(NAME:3000)
         ld    a,(name:)
         LD    A,(3000)
     Наравне с именами, определенными пользователем,  отлад-
чик может использовать и имена, загруженные  вместе  с  про-
граммой. Список таких имен создается сборщиками LINK, L80  и
некоторыми трансляторами и помещается в файл  имя.SYM.  Этот
файл считывается отладчиком автоматически при загрузке  про-
граммы из файла имя.COM.
     Список всех имеющихся символических имен можно получить
в окне дисассемблера в режиме "Sym" (<esc>  Y).  Каждое  имя
помещается в отдельную строку вместе с командой, на  которую
оно указывает. Перемещение по списку осуществляется так  же,
как и по обычному окну дисассемблера. При этом доступны  все
обычные способы изменения информации в окне дисассемблера.
     Ниже приведен пример заполнения экрана при наличии  не-
которых имен:
EB>
X02000RWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWRWWWWWWWWWWWWWWWWY
VList V DEBUGGER Version 5.1        Help:<Esc>?  Visual:Trace V EI PC=D827 I=00V
TWWWWWUWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWRWWWWS32/2-/32/32 R=58V
V     VREGS:  7FF8:60           LD    H,B                V    VFB/FA/F9/F8 +MAPV
V     V       7FF9:4B           LD    C,E                V    VT=882B:D0C1/323CV
V     V       7FFA:03           INC   BC                 V    TWWWWWWWWWWWWWWWWS
V     V       7FFB:1A           LD    A,(DE)             V    V A=00 . sZxHxpNCV
V     V       7FFC:FE 38        CP    38                 V    V BC=0240: 00  . V
V     V       7FFE:FF           RST   38                 V    V DE=0000: C3 "ц"V
V     V       7FFF:FF           RST   38                 V    V HL=7FFD: 38 "8"V
V     VMEM80@:8000:00           NOP                      V    V IX=1377: 2A "*"V
V     V       8001:00           NOP                      V    V IY=0A00: 53 "S"V
V     V       8002:00           NOP                      V    TWWWWWWWWWWWWWWWWS
V     V       8003:20 FB        JR    NZ,MEM80@:8000     V    VA'=00 . szxhxpncV
V     V       8005:DD 2A 08 80  LD    IX,(PRED:8008)     V    VBC'=0120: E1 "А"V
V     V       8009:C1           POP   BC                 V    VDE'=0A00: 53 "S"V
V     V       800A:CD CD D9     CALL  SUBR:D9CD          V    VHL'=1100: 0E  . V
TWRWWWQWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWQWWWWUWWWWWWWWWWWWWWWWS
V V       3FC0:E7 38 EB 2A E9 38 7D 93 6F 7C 9A 67 22 EB 38 2AVГ8К*И8}.o|.g"К8*V
V V       3FD0:E7 38 EB 21 18 39 C3 0A 1F CD 36 11 22 E9 38 EBVГ8К!.9ц..м6."И8КV
V V       3FE0:2A E7 38 7B 95 6F 7A 9C 67 22 EB 38 2A E9 38 EBV*Г8{.oz.g"К8*И8КV
V V       3FF0:21 1E 39 C3 0A 1F 0E 07 25 3D 20 03 E9 3C 32 03V!.9ц....%= .И<2.V
V VDRIVER:4000:41 42 6F 57 76 65 00 00 00 00 00 00 00 00 00 00VABoWve..........V
V V       4010:C3 F5 74 C3 86 78 C3 09 79 C3 23 79 C3 50 79 C3VцУtц.xц.yц#yцPyцV
V V       4020:82 78 C3 35 5B 37 C3 AC 60 C3 14 62 00 C3 AE 5FV.xц5[7ц╛`ц.b.ц╝_V
V V       4030:2A 4B F3 C9 DD E5 DD 21 B7 00 CD AB 40 DD E1 30V*KСищЕщ!╥.м╚@щА0V
ZWQWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWQWWWWWWWWWWWWWWWW[
NA

     6. Как просматривать и корректировать память.

     Для просмотра и корректировки  содержимого  памяти  ис-
пользуется режим дампа. В него можно войти, набрав <esc> D.
     Настроить окно на определенные адреса памяти можно  так
же, как и в режиме дисассемблера. Байты данных, которые ото-
бражаются в строке дампа, можно  исправлять  непосредственно
на экране как в шестнадцатиричном, так и в символьном виде.
     Аналогично устроен и режим дампа видеопамяти (<esc> V).
Отличие состоит в том, что  в  этом  режиме  отображаются  и
корректируются байты видеопамяти. При этом в  колонке  слева
от вертикальной черты можно задать букву "V" (VRAM) или  "E"
(ERAM); в случае VRAM адрес расширяется на одну цифру (0 или
1), чтобы охватить весь диапазон доступных адресов  -  128K.
Кроме того, в отличие от режима дампа,  нельзя  использовать
символические имена.


     7. Окно регистров и состояния машины.

     Переход в это окно осуществляется по команде <esc> R. В
этом окне отображаются значения регистров процессора Z-80  и
информация о состоянии машины: какой банк памяти подключен к
каждой из четырех страниц  адресного  пространства  и  какое
значение находится в каждом из четырех регистров  маппера.
     Для двухбайтовых регистров,  содержимое  которых  может
рассматриваться как адреса, отображаются, помимо  собственно
значений регистров, байты, на которые они указывают. Аккуму-
ляторы A и A' отображаются отдельно, а флаговые  регистры  -
рядом с ними в  виде  строки  состояний  флажков  (прописная
буква - 1, строчная - 0). Регистр стека отображается  вместе
с двумя словами, лежащими на вершине стека.
     Слотовые регистры  страниц  памяти  изображаются  парой
"первичный слот" "вторичный слот" (32 -  стандартная  опера-
тивная память, 2- - драйвер  дисковода,  0-  -  ПЗУ  BIOS  и
BASIC). Номера слотов, указанные на экране, определяют  кон-
фигурацию памяти машины практически всюду: в окнах дисассем-
блера, дампа, при запуске программы, при загрузке  программы
с диска и пр.
     Все поля в окне регистров можно изменять  (за  исключе-
нием регистра регенерации R). Кроме того,  заменив  +MAP  на
-MAP, можно предписать отладчику игнорировать маппер).


     8. Как организовать отладочное исполнение программы.

     Программу можно запустить на выполнение  в  непрерывном
режиме или отслеживать покомандно.
     Запуск программы на непрерывное  выполнение  происходит
при нажатии <ctrl>+G. Перед выполнением программы необходимо
принять меры,  чтобы  при  определенных  условиях  программа
остановилась, и управление вновь получил отладчик. Возврат в
отладчик происходит автоматически  всегда,  когда  программа
завершает выполнение (по команде  RET  из  головной  подпро-
граммы или по RST 0). Кроме  того,  отладчик  DBG  позволяет
предписать, чтобы программа остановилась  перед  выполнением
одной из отмеченных команд (точка приостанова, break-point).
Имеется также возможность остановить программу,  как  только
некоторая команда  изменит  значение  одного  из  отмеченных
байтов памяти (контролируемый байт, check-byte). В  принципе
выполнение программы можно прервать нажатием клавиши <stop>,
однако для этого требуется, чтобы программа работала с  раз-
решенными прерываниями.
     Чтобы установить точку приостанова, нужно в режиме дис-
ассемблера перевести курсор  в  позицию  левее  вертикальной
черты и ввести любой символ. После этого строка будет выгля-
деть, например, так:
EB>
V00+00V       0102:2A 06 00     LD    HL,(0006)
NA
Число слева от плюса указывает,  сколько  раз  можно  пройти
через точку приостанова, не останавливая программу (00 озна-
чает "остановить сразу  же").  Это  число  можно  установить
любым от 00 до FF. Число справа показывает, сколько  раз  из
этого количества еще осталось; оно автоматически уменьшается
при каждом проигнорированном прохождении через  точку.  При-
останов происходит, когда оно равно 00. Знак плюс можно  за-
менить на минус, объявив тем самым точку  временно  неактив-
ной. Поставив в этой позиции пробел, можно  совсем  отменить
точку приостанова. Точек приостанова может  быть  несколько;
их полный список можно получить в окне дисассемблера в режи-
ме "Break" (<esc> B). Просмотр списка организуется аналогич-
но режиму "Sym".
     Чтобы установить контролируемый байт,  нужно  в  режиме
дампа перевести курсор в позицию левее вертикальной черты  и
ввести любой символ. После  этого  строка  будет  выглядеть,
например, так:
EB>
V+VFIN:   00F0:2B 2B 2B 2B 2B 2B 2B 2B 2B 2B 2B 2B 2B 2B 2B 2BV++++++++++++++++V
NA
Знак плюс можно заменить на минус, объявив  тем  самым  кон-
троль временно неактивным. Поставив в этой  позиции  пробел,
можно совсем отменить контроль байта.  Всго  контроль  может
быть установлен на несколько байтов; их полный список  можно
получить в окне дампа в режиме "Check" (<esc>  H).  Просмотр
списка организуется аналогично режиму "Sym". Следует иметь в
виду, что выполнение программы значительно  замедляется  при
установке контроля изменения байтов.
     Программа начинает выполняться с адреса, находящегося в
счетчике команд PC (окно регистров). Перед этом устанавлива-
ется заданная пользователем конфигурация памяти (кроме стра-
ницы C000-FFFF), а экран переключается на стандартный  режим
операционной системы. ВНИМАНИЕ: точки приостанова и  контро-
лируемые байты ВСЕГДА устанавливаются в стандартной конфигу-
рации памяти (которая используется  операционной  системой).
При отображении параллельных банков  памяти  активные  точки
приостанова и контролируемые байты вместо знака плюс отмеча-
ются символом "~". Кроме того, для нормального  функциониро-
вания точек приостанова страница 0000-3FFF должна быть вклю-
чена на стандартный банк памяти.
     После останова программы  на  экране  снова  появляется
информация отладчика. В  окне  дисассемблера  первая  строка
устанавливается на команду, с которой начиналось выполнение,
а вторая - на ту, которая вызвала приостанов (в ней устанав-
ливается курсор). Нажав <ctrl>+G, можно продолжить  выполне-
ние программы с точки приостанова.


     9. Как организовать пошаговое исполнение программы.

     Для выполнения одной команды по адресу PC нужно  нажать
<ctrl>+T или <ctrl>+X. Разница заключается в  том,  что  при
<ctrl>+X команда CALL выполняется как одиночная  команда,  а
при <ctrl>+T - как вся подпрограмма целиком.
     Кроме того, процесс пошагового выполнения можно автома-
тизировать, включив режим  мультипликации  (поле  Visual:  в
заголовке). Имеется три  режима  Visual:No,  Exec  и  Trace;
переключение между  которыми  выполняется  по  <ctrl>+V.  No
означает стандартный режим <ctrl>+G,  <ctrl>+T  и  <ctrl>+X,
Exec - имитацию многократного нажатия <ctrl>+X,  а  Trace  -
имитацию <ctrl>+T.


     10. Операции с областями памяти.

     Эти операции - пересылка, заполнение и поиск.
     Пересылка выполняется в режиме "Move" (<esc> M). В  до-
полнительном окне располагаются  поля  запроса  двух  интер-
валов адресов: откуда и куда требуется переслать информацию.
EB>
X02000RWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWR
VMove V 0100-0108  to  0200-0208                              V
TWWWWWUWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWRWWWWS
NA
При  изменении  начального  адреса  в  одном  из  интервалов
соответствующий конечный адрес автоматически изменяется так,
чтобы длины  интервалов  совпали.  При  изменении  конечного
адреса таким же  образом  меняется  конечный  адрес  другого
интервала. Собственно пересылка выполняется при нажатии кла-
виши "возврат каретки".
     Заполнение области памяти выполняется в  режиме  "Fill"
(<esc> F). В дополнительном окне располагаются поля  запроса
интервала адресов и поле  образца  заполнения.  Образец  для
заполнения может быть набран в символьном  или  шестнадцати-
ричном виде (вид определяется полем, содержащим букву C  или
X соответственно). Сам процесс заполнения начинается при на-
жатии клавиши "возврат каретки". Размер образца определяется
положением курсора в этот момент.
EB>
X02000RWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWR
VFill V 1000-1FFF  C  ABCDEF┬.......................          V
TWWWWWUWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWRWWWWS
NA
     Поиск выполняется в режиме "Searc" (<esc> S). В  допол-
нительном окне располагаются поля запроса интервала  адресов
и поле образца поиска. Образец  поиска  задается  аналогично
образцу заполнения. Процесс поиска  начинается  при  нажатии
клавиши  "возврат  каретки".  Его  можно   прервать,   нажав
<ctrl>+<stop>. При успехе поиска окна дисассемблера и  дампа
устанавливаются  на  одну  строку  выше   найденной   точки.
Интервал  адресов  изменяется  так,  чтобы  при  продолжении
поиск возобновился со следующего байта.
EB>
X02000RWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWR
VSearcV 4000-7FFF  X  CD 10 40 ┬0 00 00 00 00 00 00 00 00     V
TWWWWWUWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWRWWWWS
NA

     11. Дополнительные возможности.

     При отладке программы нередко  возникает  необходимость
начать выполнение с начала. Для этого можно использовать ко-
манду <esc> E, приводящую все регистры процессора в исходное
состояние. Однако эта команда, разумеется, не может  восста-
новить первоначальное состояние памяти программы.
     Любой участок памяти может быть записан на диск как ма-
шинная программа. Для этого служит режим "Outpt" (<esc>  O),
по управлению похожий на "Input". Если в таблице символичес-
ких есть хотя бы одно имя,  вместе  с  программой  на  диске
создается и файл .SYM, содержащий таблицу имен. Оба  режима:
и "Input", и "Outpt", работают с заданной пользователем кон-
фигурацией памяти, что позволяет, например, записать на диск
содержимое ПЗУ или загрузить информацию во все страницы мап-
пера.
     Режим <esc> P позволяет выдать  на  принтер  содержимое
текущего окна отладчика.
     Команда <esc> C переводит отладчик в режим  простейшего
шестнадцатиричного калькулятора. В дополнительном окне  рас-
полагаются два поля операндов  (четырехзначные  шестнадцати-
ричные числа), поле знака операции (+, -, *, /,  %)  и  поле
показа результата. Поле результата заполняется при изменении
любого операнда или знака операции.
     Для  отладки  многих  программ,  особенно  графических,
важно, чтобы область видеопамяти,  используемая  программой,
не пересекалась с областью, используемой отладчиком. Команда
<esc> T позволяет указать в специальном поле,  какие  адреса
бидеопамяти отладчик может занять. Поле базового адреса рас-
полагается в левом верхнем углу рамки.


     12. Некоторые замечания.

     Выше описаны основные возможности отладчика DBG. Полный
набор возможностей отладчика приведен в руководстве  пользо-
вателя. Краткое описание их можно получить в процессе работы
прямо на экране, нажав <esc> ?.
     Закончить работу с  отладчиком  можно,  набрав  команду
<esc> Q. При  этом  экран  переключается  на  первоначальный
режим, после чего управление возвращается операционной  сис-
теме.
