	db	#fe
	dw	start
	dw	_end
	dw	start

vdp	equ	#60

V9990_add:	equ	#d4fe

	org	#d500

start:
	jp	init_v9990
	jp	msx_v9990

init_v9990:
	call	set_p1
	call	clear_pga
	call	clear_pgb
	call	set_pna
	call	set_pnb
	call	clear_sp
	ret

msx_v9990:
	ld	a,0		;set V9990 vram ADD
	out	(vdp+4),a
	xor	a
	out	(vdp+3),a	;8bits LSB
	out	(vdp+3),a	;8bits
	out	(vdp+3),a	;4bits MSB

	di
	ld	hl,0
	call	vpeek
	out	(vdp+0),a

	ld	bc,#69ff+1
loop:
	in	a,(#98)
	out	(vdp+0),a
	dec	bc
	ld	a,c
	or	b
	jr	nz,loop
	ei
	ret

;	routine vpeek
;	entry:	HL = add in VRAM
;	out:	A = vpeek(HL)

vpeek:	di
	ld	a,0
	out	(#99),a
	ld	a,#80+45
	out	(#99),a

	ld	a,h		;set bits 14 to 16
	and	#c0
	rlca
	rlca
;	or	4		;bit 16 = 1 => page 1,1
	out	(#99),a
	ld	a,#80+14
	out	(#99),a
	ld	a,l		;set bits 0 to 7
	out	(#99),a
	ld	a,l		;set bits 8 to 13
	and	#3f
	out	(#99),a
	ex	de,hl
	ex	de,hl
	in	a,(#98)
	ei
	ret


;---------------------------------------------------------------
;
;	SET MODE P1
;
;	IN:	none
;	OUT:	none
;	MOD:	AF,BC
;
set_p1:
	ld	a,0		;quit reset mode & select XTAL oscilator
	out	(vdp+7),a
	ld	a,6		;set REGISTER 6,7,8 for P1 mode
	out	(vdp+4),a
	ld	a,5
	out	(vdp+3),a
	ld	a,0
	out	(vdp+3),a
	ld	a,%10000010	;REG #8: display on, SPR on, 512kB VRAM
	out	(vdp+3),a

	ld	a,13			;preset palette index
	out	(vdp+4),a
	ld	a,%00000100	;plt0 for plane A & plt1 for plane B
	out	(vdp+3),a

	ld	a,17		;reset SA & SB scrollx register
	out	(vdp+4),a
	ld	b,8
	xor	a
loop_p1:
	out	(vdp+3),a
	djnz	loop_p1

	ld	a,27		;clear priority between SA & SB
	out	(vdp+4),a
	xor	a
	out	(vdp+3),a

	ld	a,25		;set sprite generator at #18000
	out	(vdp+4),a
	ld	a,6
	out	(vdp+3),a

	xor	a		;reset super-impose of GRAFX9000
	out	(vdp+15),a
	ret



;-------------------------------------------------------
;
;	clear pattern generator du plan A
;
;	IN:	none
;	OUT:	none
;	MOD:	AF,BC
;
clear_pga:
	xor	a
	out	(vdp+4),a
	out	(vdp+3),a
	out	(vdp+3),a
	out	(vdp+3),a

	ld	bc,#0000
loop_pga:
	xor	a
	out	(vdp+0),a
	dec	bc
	ld	a,b
	or	c
	jp	nz,loop_pga
	ret

;-------------------------------------------------------
;
;	clear pattern generator du plan B
;
;	IN:	none
;	OUT:	none
;	MOD:	AF,BC
;
clear_pgb:
	xor	a
	out	(vdp+4),a
	out	(vdp+3),a
	out	(vdp+3),a
	ld	a,#04
	out	(vdp+3),a

	ld	bc,#0000
loop_pgb:
	xor	a
	out	(vdp+0),a
	dec	bc
	ld	a,b
	or	c
	jp	nz,loop_pgb
	ret

set_pna:
	xor	a
	out	(vdp+4),a
	out	(vdp+3),a
	ld	a,#c0
	out	(vdp+3),a
	ld	a,7
	out	(vdp+3),a
	call	set_pnx
	ret

set_pnb:
	xor	a
	out	(vdp+4),a
	out	(vdp+3),a
	ld	a,#e0
	out	(vdp+3),a
	ld	a,7
	out	(vdp+3),a
	call	set_pnx
	ret

set_pnx:
	ld	hl,0
	ld	b,32
set_pnx0:
	push	bc

	ld	b,32
set_pnx1:
	ld	a,l
	out	(vdp+0),a
	ld	a,h
	out	(vdp+0),a
	inc	hl
	djnz	set_pnx1

	xor	a
	ld	b,32
set_pnx2:
	out	(vdp+0),a
	out	(vdp+0),a
	djnz	set_pnx2

	pop	bc
	djnz	set_pnx0
	ret

clear_sp:
	xor	0
	out	(vdp+4),a
	out	(vdp+3),a
	ld	a,#fe
	out	(vdp+3),a
	ld	a,3
	out	(vdp+3),a

	ld	b,125
clear_sp0
	xor	a
	out	(vdp+0),a
	out	(vdp+0),a
	out	(vdp+0),a
	ld	a,#10
	out	(vdp+0),a
	djnz	clear_sp0
	ret


_end:
