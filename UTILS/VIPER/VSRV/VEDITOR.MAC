;VEDITOR
	;.z80
	CSEG

	PUBLIC	NANKW,ANKW,INSW,OVW,RETURN,TAB
	PUBLIC	CSR_U,CSR_D,CSR_L,CSR_R,CSR_2U,CSR_2D
	PUBLIC	BS,DEL,BS_SL,DEL_SR
	PUBLIC	CSR_SU,CSR_SD,CSR_SL,CSR_SR
	PUBLIC	CSR_LD,CSR_CL,CSR_TB
	PUBLIC	INSLIN,INSCR,INSTAB,AINSCR,AKWTAB
	PUBLIC	UNDO,CTRLW
	PUBLIC	ASCRST
	PUBLIC	BLCUT,VBANK,CUT,ECUT,PASTE,EPASTE,ECPLIN
	PUBLIC	CSPLMD,SPLJMP,SCRRST,CFCSMD,CINSMD,CTABCH,CRETCH,CEOFMD,CFKLCH,CSCTMD
	PUBLIC	CTXTMD,CAIDMD,CFZSMD,CCLKF,CRPAMD
	PUBLIC	CPRTMD,OUTPG
	PUBLIC	S_SSTR,S_RSTR,F_OPEN,F_LOAD,F_MLOAD,F_SAVE,F_NAME,F_CLS,F_INS,F_CLOP,F_UNDO,F_APND,F_ACLS,E_QUIT,E_QUI2,CHILD
	PUBLIC	CHTXT,SRCOPN,RTXTCB
	PUBLIC	POSMRK,MRKJMP

	PUBLIC	EXCDMS


	INCLUDE	VWORK.INC
	INCLUDE	RABELS.INC
	INCLUDE	SYSDRV.INC
	INCLUDE	MATHDRV.INC
	INCLUDE	VDPDRV.INC
	INCLUDE	FILEDRV.INC
	INCLUDE	VKEY.INC
	INCLUDE	VSTACK.INC
	INCLUDE	VTEXT.INC
	INCLUDE	VLH.INC
	INCLUDE	VCSR.INC
	INCLUDE	VVIEW.INC
	INCLUDE	VPUT.INC
	INCLUDE	VSYS.INC
	INCLUDE	VINPBOX.INC
	INCLUDE	VFILER.INC
	INCLUDE	VJUMP.INC

JUNK0:	DW	0000H

PJUNK0:	DW	0000H
PJUNK1:	DW	0000H
PJUNK2:	DB	00H

SJUNK0:	DW	0000H
	DW	0000H

TJUNK0:	DW	0000H;FWTXTR,SRCCLS ETC

LJUNK0:	DW	0000H
;---------------------- PRT

ANKSCD:	DW	00H
JISSCD:	DW	00H

VJUNK0:	DW	00H

KPRTMD:	DB	00H

CRDB:	DB	13,0
CRLFDB:	DB	13,10,0
FFDB:	DB	0CH,0

CDTABL:
;0
	DB	1CH,".",1CH,"K",0;ANK MODE (YOKO FAST) ESC/P
	DB	1BH,"N",1BH,"h0",0;ANK MODE (YOKO FAST) NM
;1
	DB	1CH,".",1CH,"J",0;ANK MODE (TATE FAST) ESC/P
	DB	1BH,"N",1BH,"h1",0;ANK MODE (TATE FAST) NM
;2
	DB	1CH,".",1CH,"K",0;ANK MODE (YOKO HQ) ESC/P
	DB	1BH,"H",1BH,"h0",0;ANK MODE (YOKO HQ) NM
;3
	DB	1CH,".",1CH,"J",0;ANK MODE (TATE HQ) ESC/P
	DB	1BH,"H",1BH,"h1",0;ANK MODE (TATE HQ) NM
;4
	DB	1CH,"&",1CH,"K",0;KANJI MODE (YOKO) ESC/P
	DB	1BH,"K",0;KANJI MODE (YOKO) NM
;5
	DB	1CH,"&",1CH,"J",0;KANJI MODE (TATE) ESC/P
	DB	1BH,"t",0;KANJI MODE (TATE) NM

;---------------------- INPANK

TRSCTL:
	LD	A,(FEPBUF)
	AND	A
	RET	Z
	LD	B,A
	LD	HL,FEPBUF+1
TRSCJ0:
	LD	A,(HL)
	AND	00011111B
	LD	(HL),A
	INC	HL
	DJNZ	TRSCJ0
	RET

NANKW:
ANKW:
	LD	A,(INSMD)
	AND	A
	JP	NZ,INSW
	JP	OVW

;---------------------- INSERT
INSW:
;MODE CHECK
	LD	A,(EDFLG)
	AND	00001000B
	JP	Z,INSWJ0
	LD	BC,(CSP4)
	LD	DE,(SYS2)
	LD	HL,(SYS8)
	CALL	INCTX1
	LD	HL,(COLDDE)
	LD	DE,(SYS2)
	AND	A
	SBC	HL,DE

	LD	DE,(WIDTH)
	DEC	DE
	CALL	ICOMP2
	AND	A
	RET	NZ

INSWJ0:
	CALL	LINK
	LD	(LINK0),BC
	LD	HL,0
	LD	(LINK1),HL
	LD	HL,FEPBUF+1
	LD	(LINK2),HL
	LD	A,(FEPBUF)
	LD	L,A
	LD	H,0
	LD	(LINK3),HL
	LD	A,00000001B
	JP	CMK2

;---------------------- INSERT2
INSW2:
	CALL	LINK
	LD	(LINK0),BC
	LD	HL,0
	LD	(LINK1),HL
	LD	HL,FEPBUF+1
	LD	(LINK2),HL
	LD	A,(FEPBUF)
	LD	L,A
	LD	H,0
	LD	(LINK3),HL
	LD	A,00000001B
	JP	CMK3

;----------------------- OVERWRITE
OVW:
	CALL	LINK
	LD	(LINK0),BC
	LD	HL,FEPBUF+1
	LD	(LINK2),HL
	LD	A,(FEPBUF)
	LD	L,A
	LD	H,0
	LD	(LINK3),HL
	ADD	HL,BC
	CALL	INCTX2
	PUSH	BC
	POP	HL
	LD	DE,(LINK0)
	AND	A
	SBC	HL,DE
	LD	(LINK1),HL
	CALL	OVWJ1
	LD	A,00000001B
	JP	CMK2

OVWJ1:
	LD	HL,(LINK1)
	INC	HL
	LD	H,0
	LD	BC,(LINK0)
OVWJ2:
	PUSH	HL
	PUSH	BC
	CALL	CCRF1
	PUSH	BC
	POP	DE
	LD	HL,(MEM10)
	CALL	ICOMP0
	LD	B,A
	LD	A,(TXTF1)
	OR	B
	POP	BC
	POP	HL
	JP	NZ,OVWJ3
	INC	BC
	INC	H
	DEC	L
	JP	NZ,OVWJ2
	RET
OVWJ3:
	LD	L,H
	LD	H,0
	LD	(LINK1),HL
	RET

;------------------------- DELETE
DEL:
;MODE CHECK
	CALL	BK_CS
	LD	A,(EDFLG)
	AND	00001000B
	JP	Z,DELJ0
	PUSH	BC
	CALL	CCRF1
	POP	BC
	LD	A,(TXTF1)
	AND	A
	RET	NZ
DELJ0:
	PUSH	BC
	POP	DE
	LD	HL,(MEM10)
	CALL	ICOMP1
	AND	A
	RET	NZ
	LD	(LINK0),BC
	LD	HL,(LINK0)
	INC	HL
	CALL	INCTX2
	PUSH	BC
	POP	HL
	LD	DE,(LINK0)
	AND	A
	SBC	HL,DE
	LD	(LINK1),HL
	LD	HL,0
	LD	(LINK3),HL
	LD	A,00000000B
	JP	CMK3

DEL_SR:
	CALL	BK_CS
	PUSH	BC
	POP	DE
	LD	HL,(MEM10)
	CALL	ICOMP1
	AND	A
	RET	NZ


	LD	HL,0A0DH
	LD	(FEPBUF+1),HL
	LD	HL,2
	LD	(LINK3),HL
	LD	A,(CSP5)
	AND	128
	JP	NZ,DLSRJ0
	LD	HL,0
	LD	(LINK3),HL
DLSRJ0:
	LD	(LINK0),BC
	LD	HL,(CSP13)
	AND	A
	SBC	HL,BC
	LD	(LINK1),HL
	LD	HL,FEPBUF+1
	LD	(LINK2),HL
	LD	A,00000000B
	JP	CMK3

;------------------------- BACKSPACE
BS:
;MODE CHECK
	LD	A,(EDFLG)
	AND	00001000B
	JP	Z,BSJ0
	LD	BC,(CSP0)
	LD	A,B
	OR	C
	RET	Z
BSJ0:
	CALL	GTXTAD
	PUSH	BC
	PUSH	BC
	POP	DE
	LD	HL,(LHEAD+2)
	CALL	ICOMP2
	LD	B,A
	LD	DE,(CSP10)
	LD	HL,0000H
	CALL	ICOMP2
	AND	B
	POP	BC
	RET	NZ
	CALL	CCRF2
	PUSH	BC
	POP	HL
	LD	DE,(TXTF0)
	AND	A
	SBC	HL,DE
	LD	(LINK0),HL
	LD	(LINK1),DE
	LD	HL,0000H
	LD	(LINK3),HL
	LD	A,10000000B
	JP	CMK3

BS_SL:
	CALL	GTXTAD
	PUSH	BC
	PUSH	BC
	POP	DE
	LD	HL,(LHEAD+2)
	CALL	ICOMP2
	LD	B,A
	LD	DE,(CSP10)
	LD	HL,0000H
	CALL	ICOMP2
	AND	B
	POP	HL
	RET	NZ

	LD	DE,(CSP4)
	LD	(LINK0),DE
	AND	A
	SBC	HL,DE
	LD	(LINK1),HL
	LD	HL,0
	LD	(LINK3),HL
	LD	A,10000000B
	JP	CMK3

;------------------------------ CUT
BCTCB0:;START POINT
	DW	0000H
	DW	0000H
BCTCB1:;END POINT
	DW	0000H
	DW	0000H
BCTCMD:
	DB	00H;COMMAND
	DB	00H;SAME LINE

BRTRUE:
	LD	A,(EDFLG)
	AND	00010000B
	CALL	Z,EDSWON
	JP	RTRUE

BLCUT:
	CALL	VBLOCK
	AND	A
	JP	NZ,BLCJ0

	CALL	JPOINT
	LD	A,(BCTCMD+1)
	AND	A
	JP	NZ,BLCJ1

	LD	A,(BCTCMD)
	CP	1
	JP	Z,BMEM
	CP	2
	JP	Z,BPRT
	CP	3
	JP	Z,BWRT

BCUT:
	CALL	BSIZ
	CALL	GTXTAD
	LD	L,C
	LD	H,B
	CALL	SVUTX
	LD	A,0FFH
	CALL	SAVSCB
	LD	HL,SJUNK0
	LD	DE,SCB5
	CALL	SM2D

	CALL	LDUTX
	CALL	SETSIZ
	CALL	PUTTX3
	CALL	PUTBAR
	JP	BRTRUE

BSIZ:
	LD	HL,0
	LD	(SJUNK0),HL
	LD	(SJUNK0+2),HL
	CALL	GTXTAD
	LD	HL,(CSP13)
	CALL	LDLINK
	JP	NZ,RFALSE
	CALL	BSZJ3
BSZJ0:
	CALL	CSR_D
	CALL	CSRWK2
	LD	HL,(CSP3)
	LD	DE,(BCTCB1)
	CALL	ICOMP3
	JP	Z,BSZJ1
	LD	BC,(CSP4)
	LD	HL,(CSP13)
	CALL	LDLINK
	JP	NZ,BSZJ1
	CALL	BSZJ3
	JP	BSZJ0
BSZJ1:
	LD	BC,(CSP4)
	LD	DE,(CSP2)
	LD	HL,(BCTCB1+2)
	LD	H,0
	ADD	HL,DE
	CALL	INCTX1
	LD	L,C
	LD	H,B
	LD	BC,(CSP4)
	CALL	LDLINK
	JP	NZ,BSZJ2
	CALL	BSZJ3
BSZJ2:
	CALL	JPOINT
	RET

BSZJ3:
	LD	HL,(LINK1)
	LD	(SUBDTA),HL
	LD	HL,0
	LD	(SUBDTA+2),HL
	LD	HL,SUBDTA
	LD	DE,SJUNK0
	LD	BC,SJUNK0
	CALL	DBLADD
	RET


BMEM:
	LD	A,0FFH
	CALL	SAVSCB
	CALL	GTXTAD
	LD	HL,(CSP13)
	CALL	LDLINK
	JP	NZ,RFALSE
	CALL	PK0
BMJ0:
	CALL	CSR_D
	CALL	CSRWK2
	LD	HL,(CSP3)
	LD	DE,(BCTCB1)
	CALL	ICOMP3
	JP	Z,BMJ1
	LD	BC,(CSP4)
	LD	HL,(CSP13)
	CALL	LDLINK
	JP	NZ,BMJ1
	CALL	PK0
	JP	BMJ0
BMJ1:
	LD	BC,(CSP4)
	LD	DE,(CSP2)
	LD	HL,(BCTCB1+2)
	LD	H,0
	ADD	HL,DE
	CALL	INCTX1
	LD	L,C
	LD	H,B
	LD	BC,(CSP4)
	CALL	LDLINK
	JP	NZ,BMJ2
	CALL	PK0
BMJ2:
	CALL	SETSIZ
	CALL	JPOINT
	RET

BPRT:
	CALL	RSTPRT
	RET	NZ
	CALL	GTXTAD
	LD	HL,(CSP13)
	CALL	LDLINK
	JP	NZ,RFALSE
	CALL	PK2
BPJ0:
	CALL	CSR_D
	CALL	CSRWK2
	LD	HL,(CSP3)
	LD	DE,(BCTCB1)
	CALL	ICOMP3
	JP	Z,BPJ1
	LD	BC,(CSP4)
	LD	HL,(CSP13)
	CALL	LDLINK
	JP	NZ,BPJ1
	CALL	PK2
	JP	BPJ0
BPJ1:
	LD	BC,(CSP4)
	LD	DE,(CSP2)
	LD	HL,(BCTCB1+2)
	LD	H,0
	ADD	HL,DE
	CALL	INCTX1
	LD	L,C
	LD	H,B
	LD	BC,(CSP4)
	CALL	LDLINK
	JP	NZ,BPJ2
	CALL	PK2
BPJ2:
	CALL	CLSPRT
	CALL	JPOINT
	RET

BWRT:
	CALL	BWJ5
	RET	NZ
	CALL	GTXTAD
	LD	HL,(CSP13)
	CALL	LDLINK
	JP	NZ,RFALSE
	CALL	PK3
BWJ0:
	CALL	CSR_D
	CALL	CSRWK2
	LD	HL,(CSP3)
	LD	DE,(BCTCB1)
	CALL	ICOMP3
	JP	Z,BWJ1
	LD	BC,(CSP4)
	LD	HL,(CSP13)
	CALL	LDLINK
	JP	NZ,BWJ1
	CALL	PK3
	JP	BWJ0
BWJ1:
	LD	BC,(CSP4)
	LD	DE,(CSP2)
	LD	HL,(BCTCB1+2)
	LD	H,0
	ADD	HL,DE
	CALL	INCTX1
	LD	L,C
	LD	H,B
	LD	BC,(CSP4)
	CALL	LDLINK
	JP	NZ,BWJ2
	CALL	PK3
BWJ2:
	CALL	BWJ6
	CALL	JPOINT
	RET

BWJ5:
	LD	DE,WCB2
	LD	HL,FCB9
	CALL	INPUT3
	AND	A
	JP	NZ,BWJ5J1
	LD	DE,FCB9
	CALL	WOPEN
	JP	NZ,BWJ5J0
	LD	A,63
	CALL	GPUTMS
	JP	RTRUE
BWJ5J0:
	LD	A,65
	CALL	GPUTMS
	JP	RFALSE
BWJ5J1:
	LD	A,66
	CALL	GPUTMS
	JP	RFALSE

BWJ6:
	LD	DE,FCB9
	CALL	FCLOSE
	LD	A,64
	CALL	FPUTMS
	RET

BLCJ1:
	LD	A,(BCTCMD)
	CP	1
	JP	Z,BLINMEM
	CP	2
	JP	Z,BLINPRT
	CP	3
	JP	Z,BLINWRT
BLINCUT:
	CALL	BLINMEM
	LD	HL,0
	LD	(LINK3),HL
	LD	A,00000001B
	JP	CMK

BLINMEM:
	CALL	GTXTAD
	LD	(LINK0),BC

	LD	A,(BCTCB1+2)
	LD	DE,(BCTCB0+2)
	SUB	E
	LD	L,A
	LD	H,0
	LD	DE,(CSRP)
	ADD	HL,DE

	CALL	INCTX1
	LD	H,B
	LD	L,C
	LD	BC,(LINK0)
	CALL	LDLINK
	JP	NZ,RFALSE
	LD	A,0FFH
	CALL	PK1
	RET

BLCJ0:
	CALL	RSTMS1
	LD	A,38
	CALL	EPUTMS
	RET

BLINPRT:
	CALL	RSTPRT
	RET	NZ

	CALL	GTXTAD
	LD	(LINK0),BC

	LD	A,(BCTCB1+2)
	LD	DE,(BCTCB0+2)
	SUB	E
	LD	L,A
	LD	H,0
	LD	DE,(CSRP)
	ADD	HL,DE

	CALL	INCTX1
	LD	H,B
	LD	L,C
	LD	BC,(LINK0)
	CALL	LDLINK
	JP	NZ,RFALSE
	LD	A,0FFH
	CALL	PK2
	CALL	CLSPRT
	RET

BLINWRT:
	CALL	BWJ5
	RET	NZ
	CALL	GTXTAD
	LD	(LINK0),BC

	LD	A,(BCTCB1+2)
	LD	DE,(BCTCB0+2)
	SUB	E
	LD	L,A
	LD	H,0
	LD	DE,(CSRP)
	ADD	HL,DE

	CALL	INCTX1
	LD	H,B
	LD	L,C
	LD	BC,(LINK0)
	CALL	LDLINK
	JP	NZ,RFALSE
	LD	A,0FFH
	CALL	PK3
	CALL	BWJ6
	RET

VBJUNK:	DB	00
VBDTA:
	DB	"CcMmPpWw",0

VBLOCK:
	CALL	MARKJ
	CALL	RSTMS2
	LD	A,37
	CALL	EPUTMS

	LD	HL,(CSRP)
	LD	(CSRCB2),HL
	LD	(CSRCB2+2),HL
	LD	A,0FFH
	LD	(CSRCB2+9),A
	LD	(CSRCB2+10),A
	LD	HL,(CSP3)
	LD	(CSRCB2+12),HL
	LD	A,(CSP0)
	LD	(CSRCB2+11),A

	LD	A,(EDFLG)
	OR	00100000B
	LD	(EDFLG),A

	LD	HL,KMAP5
	CALL	KANEL
	PUSH	AF

	CALL	ERS_CS
	XOR	A
	LD	(CSRCB2+9),A
	LD	(CSRCB2+10),A

	LD	A,(EDFLG)
	AND	11011111B
	LD	(EDFLG),A

	LD	HL,SVDTA2
	CALL	LODSCT

	POP	AF
	AND	A
	JP	NZ,RFALSE
	JP	RTRUE

VBANK:
	LD	A,(FEPBUF+1)
	LD	HL,VBDTA
	CALL	TXMACH
	AND	A
	RET	Z
	DEC	A
	SRL	A
	LD	(BCTCMD),A

	CALL	VBAD
	JP	NZ,EXIT
	JP	IBXRET

VBAD:
	LD	HL,(CSP3)
	LD	BC,(CSP0)

	LD	DE,(CSRCB2+12)
	LD	A,(CSRCB2+11)
	LD	B,A

	CALL	ICOMP3
	JP	Z,VBLJ1

	XOR	A
	LD	(BCTCMD+1),A

	CALL	ICOMP0
	JP	Z,VBLJ0

VBLJ2:
	LD	(BCTCB1),DE
	LD	A,B
	LD	(BCTCB1+2),A

	LD	(BCTCB0),HL
	LD	A,C
	LD	(BCTCB0+2),A
	CALL	MARKJ
	JP	RTRUE

VBLJ0:
	LD	(BCTCB0),DE
	LD	A,B
	LD	(BCTCB0+2),A

	LD	(BCTCB1),HL
	LD	A,C
	LD	(BCTCB1+2),A
	JP	RTRUE

VBLJ1:
	LD	A,0FFH
	LD	(BCTCMD+1),A

	LD	A,B
	CP	C
	JP	Z,RFALSE
	JP	NC,VBLJ2
	JP	VBLJ0

ECPLIN:
	CALL	ECUT
	CALL	CSRWKS
	CALL	PASTE
	RET

ECUT:
	LD	BC,(CSP4)
	LD	HL,(CSP13)
	CALL	LDLINK
	JP	NZ,RFALSE
	XOR	A
	CALL	PK1
	CALL	CSR_D
	RET

CUT:
	LD	BC,(CSP4)
	LD	HL,(CSP13)
	CALL	LDLINK
	JP	NZ,RFALSE
	XOR	A
	CALL	PK1
	LD	HL,0
	LD	(LINK3),HL
	LD	A,00000001B
	JP	CMK

LDLINK:;<-BC(LINK0),HL(LINK1')
	LD	A,(CSP5)
	CP	1
	JP	Z,RFALSE
	LD	(LINK0),BC
	LD	DE,(MEM10)
	CALL	ICOMP0
	JP	NZ,LLKJ0
	LD	HL,(MEM10)
LLKJ0:
	AND	A
	SBC	HL,BC
	LD	(LINK1),HL
	LD	A,L
	OR	H
	JP	Z,RFALSE
	JP	RTRUE

PK0:
	LD	HL,(LINK0)
	LD	DE,SUBDTA
	LD	BC,(LINK1)
	LD	A,(SCB2+24)
	CALL	VR2M
	LD	BC,(LINK1)
	LD	DE,SCB5
	LD	HL,SUBDTA
	CALL	WDST
	RET

PK1:
	CALL	SAVSCB
	CALL	PK0
	CALL	SETSIZ
	RET

PK2:
	LD	HL,(LINK0)
	LD	DE,SUBDTA
	LD	BC,(LINK1)
	LD	A,(SCB2+24)
	CALL	VR2M
	LD	BC,(LINK1)
	LD	HL,SUBDTA
	CALL	M2VRH
	RET

PK3:
	LD	HL,(LINK0)
	LD	DE,DTA
	LD	BC,(LINK1)
	LD	A,(SCB2+24)
	CALL	VR2M
	LD	HL,(LINK1)
	LD	DE,FCB9
	CALL	WFILE
	RET

SAVSCB:
	LD	HL,(SCB5+4)
	LD	DE,(SCB5+6)
	LD	(PJUNK0),HL
	LD	(PJUNK1),DE
	LD	(PJUNK2),A
	RET

SETSIZ:
	LD	HL,SCB5+4
	LD	DE,PJUNK0
	LD	BC,PJUNK0
	CALL	DBLSUB
	LD	BC,5
	LD	DE,SCB5
	LD	HL,PJUNK0
	CALL	WDST
	RET

;------------------------------ PASTE
EPASTE:
	LD	HL,SCB5
	CALL	SVSCB0
	LD	HL,SCB4
	CALL	SVSCB1

	CALL	PASTE

	LD	DE,SCB5
	CALL	LDSCB0
	JP	NZ,RFALSE

	LD	HL,SCB5
	CALL	SVSCB2

	LD	DE,SCB4
	CALL	LDSCB1
	JP	Z,RTRUE
	LD	DE,SCB5
	CALL	LDSCB2
	RET

PASTE:
	LD	HL,(SCB5+4)
	LD	DE,(SCB5+6)
	LD	A,H
	OR	L
	OR	D
	OR	E
	RET	Z

;PASTE

	LD	BC,5
	LD	DE,SCB5
	LD	HL,PJUNK0
	CALL	RDST

	CALL	PSVUTX

	LD	DE,SCB5
	LD	HL,PJUNK0
	CALL	SD2M

	CALL	LDUTX

	LD	DE,(CSRP)
	CALL	S_CSP
	LD	BC,(CSP4)
	LD	DE,(CSP2)
	CALL	PUTUP
	LD	DE,(CSRP)
	CALL	S_CSP
	LD	A,(EDFLG)
	AND	00010000B
	CALL	Z,EDSWON
	RET

PSVUTX:
	LD	A,(PJUNK2)
	AND	A
	JP	Z,PSUJ0
	CALL	LINK
	LD	H,B
	LD	L,C
	JP	SVUTX
PSUJ0:
	LD	HL,(CSP4)
	JP	SVUTX


;------------------------------ INSLIN
INSLIN:
	CALL	CSR_SL
	CALL	INSCR
	CALL	CSR_U
	RET

AINSCR:
	LD	A,(INSMD)
	AND	A
	JP	NZ,CSR_CL
	JP	INSCR

INSCR:
	LD	A,2
	LD	(FEPBUF),A
	LD	HL,0A0DH
	LD	(FEPBUF+1),HL
	JP	INSW

INSTAB:
	LD	HL,901H
	LD	(FEPBUF),HL
	JP	INSW

AKWTAB:
	LD	HL,901H
	LD	(FEPBUF),HL
	JP	ANKW


;----------------------- CURSOR
CSR_2U:
	CALL	CSR_U
	LD	A,(CSP7)
	AND	A
	RET	NZ
	CALL	CSRWKS
CSR_U:
	LD	HL,(CSRP)
	LD	DE,(WIDTH)
	AND	A
	SBC	HL,DE
	EX	DE,HL
	CALL	S_CSP
	RET

CSR_2D:
	CALL	CSR_D
	LD	A,(CSP8)
	AND	A
	RET	NZ
	CALL	CSRWKS
CSR_D:
	LD	HL,(CSRP)
	LD	DE,(WIDTH)
	ADD	HL,DE
	EX	DE,HL
	CALL	S_CSP
	RET

CSR_L:
;MODE CHECK
	LD	A,(EDFLG)
	AND	00001000B
	JP	Z,CSRLJ0
	LD	BC,(CSP0)
	LD	A,B
	OR	C
	RET	Z
CSRLJ0:
	LD	DE,(CSRP)
	DEC	DE
	CALL	S_CSP
	LD	A,(FCSMD)
	AND	A
	CALL	Z,BK_CS
	CALL	S_CSP9
	RET

CSR_R:
;MODE CHECK
	LD	A,(EDFLG)
	AND	00001000B
	JP	Z,CSRRJ0
	LD	HL,(CSP0)
	LD	DE,(WIDTH)
	DEC	DE
	DEC	DE
	CALL	ICOMP2
	AND	A
	RET	NZ
	LD	DE,(CSRP)
	INC	DE
	CALL	S_CSP
	CALL	S_CSP9
	RET
CSRRJ0:
	LD	DE,(CSRP)
	INC	DE
	CALL	S_CSP
	LD	A,(FCSMD)
	AND	A
	CALL	Z,FW_CS
	CALL	S_CSP9
	RET

CSR_SU:
	LD	DE,(SYS2)
	CALL	S_CSP
	RET

CSR_SD:
	LD	DE,(SYS3)
	DEC	DE
	CALL	S_CSP
	RET

CSR_SL:
	LD	DE,(CSP2)
	CALL	S_CSP
	CALL	S_CSP9
	RET

CSR_SR:
	LD	DE,(CSP6)
	DEC	DE
	CALL	S_CSP
	CALL	S_CSP9
	RET

CSR_CL:
	LD	A,(CSP5)
	AND	128
	JP	NZ,CSR_LD
	JP	INSCR

CSR_LD:
	LD	DE,(CSP6)
	CALL	S_CSP
	CALL	S_CSP9
	RET

CSR_TB:
	LD	HL,(CSP0)
	LD	H,HIGH TABAD
	LD	A,(HL)
	LD	E,A
	LD	D,0
	LD	HL,(CSRP)
	ADD	HL,DE
	EX	DE,HL
	CALL	S_CSP
	CALL	S_CSP9
	LD	A,(FCSMD)
	AND	A
	CALL	Z,FW_CS
	RET

;-------------------------- RETURN
RETURN:
	LD	A,(INSMD)
	XOR	1
	JP	NZ,CSR_CL
	LD	A,(AIDMD)
	AND	A
	JP	Z,INSCR
	CALL	AINDNT
	RET

;------------------------------ TAB
TAB:
	LD	A,(INSMD)
	XOR	1
	JP	NZ,CSR_TB
	JP	INSTAB

;------------------------------ CTRLW
CTRLW:
	LD	A,58
	CALL	GPUTMS
	CALL	TIMION
	CALL	WAIT4
	PUSH	AF
	PUSH	BC
	CALL	KSCRST
	POP	BC
	POP	AF
	RET	NZ
	LD	C,1
	LD	(FEPBUF),BC
	CALL	TIMIOF
	JP	ANKW

;------------------------------ UNDO
UNDO:
	CALL	RYNK1
	RET	NZ
	LD	A,B
	AND	128
	JP	NZ,INSW
	JP	INSW2

;----------------------- CHINSMD
CINSMD:
	LD	HL,INSMD
	LD	B,0
	LD	C,1
	CALL	CHLMEM
	RET

;----------------------- MARK JUMP
POSMRK:
	CALL	MEDSTL
	LD	HL,EDSTL
	LD	DE,SVSTL
	LD	BC,32
	LDIR
	CALL	RSTMS1
	LD	A,11
	CALL	EPUTMS
	RET

MRKJMP:
	LD	A,(EDSTL+16)
	LD	B,A
	LD	A,(SVSTL+16)
	AND	A
	JP	Z,RFALSE
	CP	B
	JP	Z,MRJJ0
	CALL	RTXTCB
	LD	A,(SUBDTA+EDFLG-MEMSIZ)
	AND	00000010B
	JP	Z,RFALSE
MRJJ0:
	LD	HL,SVSTL
	CALL	EXCTX2
	JP	RTRUE


;----------------------- CHSCREENPUT
ASCRST:
	CALL	PUTTX3
	CALL	PUTBAR
	RET

SPLJMP:
	LD	A,(SPLMD)
	AND	A
	RET	Z
	CALL	MEDSTL
	LD	A,(SPLMD)
	CP	1
	JP	NZ,SPLJJ0
	LD	HL,EDSTL
	LD	DE,SPLDTA
	LD	BC,32
	LDIR
	CALL	SPLSC2
	LD	HL,SPLDTA+32
	CALL	EXCTX2
	RET
SPLJJ0:
	LD	HL,EDSTL
	LD	DE,SPLDTA+32
	LD	BC,32
	LDIR
	CALL	SPLSC1
	LD	HL,SPLDTA
	CALL	EXCTX2
	RET

EXCJUNK:
	DW	0000H

EXCTX2:
	LD	(EXCJUNK),HL
	CALL	ERS_CS
	LD	IX,(EXCJUNK)
	LD	A,(IX+16)
	CALL	EXCTXT
	CALL	EXCRS2
	LD	IX,(EXCJUNK)
	LD	L,(IX+24)
	LD	H,(IX+25)
	CALL	AJLIN
	LD	IX,(EXCJUNK)
	LD	L,(IX+22)
	LD	H,(IX+23)
	LD	A,2
	LD	(SCHMD),A
	CALL	JUMPCSP
	XOR	A
	LD	(SCHMD),A
	CALL	PUTBAR
	RET

CSPLMD:
	LD	A,(SPLMD)
	AND	A
	JP	Z,SPLSC0
	JP	FULSC

FULSC:
	LD	A,1
	LD	(SYS0),A
	LD	A,22
	LD	(SYS1),A
	CALL	SCR
	XOR	A
	LD	(SPLMD),A
	RET

SPLSC0:
	CALL	SPLSC2
	CALL	SCR
	CALL	SPLSC1
	CALL	SCR
	CALL	MEDSTL
	LD	HL,EDSTL
	LD	DE,SPLDTA
	LD	BC,32
	LDIR
	LD	HL,EDSTL
	LD	DE,SPLDTA+32
	LD	BC,32
	LDIR
	RET

SCRRST:
	LD	A,(SPLMD)
	AND	A
	JP	Z,SCRJ0
	CALL	SPLJMP
	CALL	SPLJMP
	RET
SCRJ0:
	LD	A,(TXTNUM)
	CALL	EXCTXT
	CALL	EXCRST
	RET

SPLSC1:
	LD	A,1
	LD	(SYS0),A
	LD	A,11
	LD	(SYS1),A
	LD	A,1
	LD	(SPLMD),A
	RET

SPLSC2:
	LD	A,13
	LD	(SYS0),A
	LD	A,10
	LD	(SYS1),A
	LD	A,2
	LD	(SPLMD),A
	RET

SCR:
	CALL	S_TXMD
	CALL	PUTTX3
	CALL	PUTBAR
	CALL	CSRSET
	RET

CFCSMD:
	LD	HL,FCSMD
	LD	B,1;ON
	LD	C,0;OFF
	CALL	CHLMEM
	LD	C,28
	CALL	CPUT1
	LD	A,(CSP5)
	XOR	1
	RET

CPRTMD:
	LD	B,0;ON
	LD	C,1;OFF
	LD	HL,PRTMD
	CALL	CHLMEM
	LD	C,90
	CALL	CPUT1
	RET

OUTPG:
	CALL	CHKPRT
	JP	NZ,OTPGJ0
	LD	A,74
	CALL	GPUTMS
	LD	DE,FFDB
	CALL	PTPRN
	LD	A,75
	CALL	FPUTMS
	RET
OTPGJ0:
	LD	A,73
	CALL	GPUTMS
	RET

CTABCH:
	LD	HL,TABCH
	LD	B,127
	LD	C,0
	CALL	CHLMEM
	LD	C,21
	CALL	CPUT1
	RET

CRETCH:
	LD	HL,RETCH
	LD	B,254
	LD	C,0
	CALL	CHLMEM
	LD	C,22
	CALL	CPUT1
	RET

CEOFMD:
	LD	HL,EOFMD
	LD	B,1
	LD	C,0
	CALL	CHLMEM
	LD	C,23
	CALL	CPUT1
	RET

CCLKF:
	LD	HL,CLICKF
	LD	B,0FFH
	LD	C,0
	CALL	CHLMEM
	LD	C,24
	CALL	CPUT1
	RET

CTXTMD:
	LD	HL,TXTMD
	LD	B,1
	LD	C,0
	CALL	CHLMEM
	LD	C,25
	CALL	CPUT1
	RET

CFKLCH:
	LD	HL,FKLCH
	LD	B,12
	LD	C,0
	CALL	CHLMEM
	LD	C,29
	CALL	CPUT1
	RET

CAIDMD:
	LD	HL,AIDMD
	LD	B,0FFH
	LD	C,0
	CALL	CHLMEM
	LD	C,26
	CALL	CPUT1
	RET

CFZSMD:
	LD	HL,FZSMD
	LD	B,0FFH
	LD	C,0
	CALL	CHLMEM
	LD	C,25
	CALL	CPUT1
	RET

CRPAMD:
	LD	HL,RPAMD
	LD	B,0FFH
	LD	C,0
	CALL	CHLMEM
	LD	C,41
	CALL	CPUT1
	RET

CSCTMD:
	LD	HL,SCTMD
	LD	B,0FFH
	LD	C,0
	CALL	CHLMEM
	LD	HL,0FFFFH
	LD	(LHEAD+62),HL
	CALL	PUTBAR
	CALL	MVCSR
	RET



;----------------------- CHTXT
CHTXT:
	LD	A,(TXTNUM)
	INC	A
	CALL	SRCOP2
	JP	NZ,RFALSE
	LD	A,B
	CALL	EXCTXT
	CALL	EXCRST
	JP	RTRUE

SRCLTX:
	LD	A,(TXTNUM)
	CALL	SRCCLS
	JP	NZ,RFALSE
	LD	A,B
	CALL	EXCTXT
	CALL	EXCRS2
	JP	RTRUE

SRCOP2:
	LD	(TJUNK0),A
	CALL	EXCSAV
	LD	A,(MAXTXT)
	LD	(TJUNK0+1),A
SRCOP2J0:
	LD	A,(TJUNK0)
	LD	BC,(MAXTXT)
	SUB	4
	CP	C
	CALL	NC,SRCOP2J2
	LD	A,(TJUNK0)
	CALL	RTXTCB
	LD	A,(SUBDTA+EDFLG-MEMSIZ)
	AND	00000010B
	JP	NZ,SRCOP2J1
	LD	HL,TJUNK0
	INC	(HL)
	LD	HL,TJUNK0+1
	DEC	(HL)
	JP	NZ,SRCOP2J0
	JP	RFALSE
SRCOP2J1:
	LD	A,(TJUNK0)
	LD	B,A
	JP	RTRUE
SRCOP2J2:
	LD	A,4
	LD	(TJUNK0),A
	RET

SRCOPN:
	LD	(TJUNK0),A
	CALL	EXCSAV
SRCOPJ0:
	LD	A,(TJUNK0)
	LD	BC,(MAXTXT)
	SUB	4
	CP	C
	JP	NC,RFALSE
	LD	A,(TJUNK0)
	CALL	RTXTCB
	LD	A,(SUBDTA+EDFLG-MEMSIZ)
	AND	00000010B
	JP	NZ,SRCOPJ1
	LD	HL,TJUNK0
	INC	(HL)
	JP	SRCOPJ0
SRCOPJ1:
	LD	A,(TJUNK0)
	LD	B,A
	JP	RTRUE

SRCCLS:
	LD	(TJUNK0),A
	CALL	EXCSAV
	LD	A,(MAXTXT)
	LD	(TJUNK0+1),A
SRCCLJ0:
	LD	A,(TJUNK0)
	LD	BC,(MAXTXT)
	SUB	4
	CP	C
	CALL	NC,SRCCLJ2
	LD	A,(TJUNK0)
	CALL	RTXTCB
	LD	A,(SUBDTA+EDFLG-MEMSIZ)
	AND	00000010B
	JP	Z,SRCCLJ1
	LD	HL,TJUNK0
	INC	(HL)
	LD	HL,TJUNK0+1
	DEC	(HL)
	JP	NZ,SRCCLJ0
	JP	RFALSE
SRCCLJ1:
	LD	A,(TJUNK0)
	LD	B,A
	JP	RTRUE
SRCCLJ2:
	LD	A,4
	LD	(TJUNK0),A
	RET

RTXTCB:
	SUB	4
	ADD	A,A
	ADD	A,30H
	LD	H,A
	LD	L,0
	LD	DE,SUBDTA
	LD	BC,SCB1-MEMSIZ
	XOR	A
	CALL	VR2M
	RET

;------------------------ CLS
CLS:
	CALL	PUTTX3
	RET

;---------------------- REPLACE/S_SSTR
S_SSTR:
	LD	DE,WCB9
	CALL	INPUT1
	LD	B,A
	AND	10000000B
	JP	NZ,RFALSE
	LD	A,B
	AND	A
	JP	NZ,RTRUE
	LD	A,(EXCDTA)
	LD	(SDATA),A
	LD	C,A
	LD	B,0
	LD	HL,EXCDTA+1
	LD	DE,SDATA+1
	LDIR
	XOR	A
	LD	(RPLMD),A
	JP	RTRUE

S_RSTR:
	CALL	S_SSTR
	JP	NZ,RFALSE
	LD	DE,WCB10
	CALL	INPUT1
	LD	B,A
	AND	10000000B
	JP	NZ,RFALSE
	LD	A,B
	AND	A
	JP	NZ,SRSTJ0
	LD	A,(EXCDTA)
	LD	(RDATA),A
	LD	C,A
	LD	B,0
	LD	HL,EXCDTA+1
	LD	DE,RDATA+1
	LDIR
SRSTJ1:
	LD	A,0FFH
	LD	(RPLMD),A
	JP	RTRUE
SRSTJ0:
	XOR	A
	LD	(RDATA),A
	JP	SRSTJ1

	CALL	MVCSR
	LD	HL,(CSP3)
	LD	(CSRCB2+12),HL
	LD	A,(CSP0)
	LD	(CSRCB2+11),A
	LD	A,0FFH
	LD	(CSRCB2+9),A
; CALL CPSET
	LD	A,0FFH
	LD	(CSRCB2+10),A
	CALL	ERS_CS
	LD	HL,0
	LD	(CSRCB2+9),HL
;CALL INPSD
	RET

SEPLACE:
	CALL	INPRD
	RET

;------------------------ LOAD/SAVE
E_QUIT:
	LD	A,1
	CALL	INPYN
	JP	NZ,RFALSE
	CALL	F_ACL2
	JP	NZ,RFALSE
	CALL	STKCLS;ALL WORK STACKS CLOSE
	JP	GODOS

E_QUI2:
	LD	A,48
	CALL	INPYN
	RET	NZ
	CALL	F_ACL3
	RET	NZ
	CALL	STKCLS
	JP	GODOS

CHILD:
	JP	GODOSR

FILER:
	JP	VFILER
; RET Z
; CALL PUTBAR
; CALL PUTTX3
; RET

F_NEW:
	CALL	NEWTXT
	LD	A,(EDFLG)
	OR	00000011B
	LD	(EDFLG),A
	CALL	PUTBAR
	CALL	PUTTX3
	CALL	CSRRST
	LD	A,14
	CALL	STDPMS
	JP	RTRUE

F_UNDO:
	LD	A,39
	CALL	INPYN
	RET	NZ
	LD	HL,FCB5
	LD	DE,FCB9
	LD	BC,12
	LDIR
	CALL	CLSTXT
	JP	F_READ

F_CLOP:
	LD	DE,WCB1
	LD	HL,FCB9
	CALL	INPUT3
	AND	A
	RET	NZ
	CALL	CLSTXT
	JP	F_READ

F_APND:

F_ACLS:
	CALL	F_ACL2
	JP	NZ,RFALSE
	JP	RSTART

F_ACL2:
	CALL	F_CL2
	JP	NZ,RFALSE
	LD	A,B
	AND	A
	JP	Z,F_ACL2
	JP	RTRUE

F_ACL3:
	CALL	F_CL1
	JP	Z,F_ACL3
	JP	RTRUE

F_CLS:
	CALL	F_CL2
	JP	NZ,RFALSE
	LD	A,B
	AND	A
	JP	Z,RTRUE
	JP	RSTART

F_CL2:
	LD	A,(EDFLG)
	AND	00010000B
	JP	NZ,F_CL2J0
F_CL1:
	CALL	CLSTXT
	CALL	CHTXT
	LD	B,A
	JP	RTRUE
F_CL2J0:
	CALL	F_CLSV
	JP	Z,F_CL1
	JP	RFALSE

F_CLSV:
	LD	A,18
	CALL	INPYN
	JP	Z,FCLSVJ0
	AND	11000000B
	CP	11000000B
	JP	Z,RTRUE
	JP	RFALSE
FCLSVJ0:
	CALL	PUTTX3
	CALL	CSRSET
	CALL	WRITETXT
	JP	Z,RTRUE
	LD	A,59
	CALL	GPUTMS
	JP	RFALSE

F_MLOAD:
	LD	A,(FEPBUF)
	AND	A
	JP	Z,RFALSE

	LD	B,A
	LD	HL,FEPBUF+1
FMLJ0:
	PUSH	BC
	PUSH	HL
	LD	DE,FCB9
	LD	BC,12
	LDIR
	CALL	F_LOAD
	POP	HL
	POP	BC
	LD	DE,12
	ADD	HL,DE
	DJNZ	FMLJ0
	JP	RTRUE

F_OPEN:
	LD	DE,WCB1
	LD	HL,FEPBUF
	CALL	INPUT4
	AND	A
	JP	Z,F_MLOAD
	AND	10000000B
	JP	NZ,RFALSE
	CALL	VFILER
	JP	NZ,F_OPEN
	JP	RTRUE

F_LOAD:
	LD	DE,FCB9
	CALL	FSRCH
	CALL	Z,FOPJ1;WILD CARD?
	CALL	F_COMP
	JP	Z,FOPJ0
	CALL	SRCLTX
	JP	Z,F_READ
	LD	A,15;TOO MANY OPEN
	CALL	GPUTMS
	JP	RFALSE
FOPJ0:
	LD	A,16;FILE ALREADY OPEN
	CALL	GPUTMS
	JP	RFALSE
FOPJ1:
	LD	HL,DTA
	LD	DE,FCB9
	LD	BC,12
	LDIR
	RET

FFJUNK:	DW	0000H

F_COMP:
	LD	A,4
	LD	(FFJUNK),A
	LD	A,(MAXTXT)
	LD	(FFJUNK+1),A
FCPJ2:
	LD	A,(FFJUNK)
	CALL	SRCOPN
	JP	NZ,RFALSE
	LD	A,B
	LD	(FFJUNK),A
	LD	HL,FCB9
	LD	DE,SUBDTA+EDSTL-MEMSIZ
	LD	A,12
	CALL	TXCOMP
	JP	Z,RTRUE
	LD	HL,FFJUNK
	INC	(HL)
	LD	HL,FFJUNK+1
	DEC	(HL)
	JP	NZ,FCPJ2
	JP	RFALSE

F_READ:
	LD	HL,FCB9
	LD	DE,FCB3
	LD	BC,12
	LDIR
	CALL	READTXT
	JP	NZ,F_NEW
	CALL	PUTBAR
	CALL	PUTTX3
	CALL	CSRRST
	JP	RTRUE

F_SAVE:
	LD	A,19
	CALL	INPYN
	RET	NZ
	CALL	PUTTX3
	CALL	CSRSET
	CALL	WRITETXT
	JP	Z,F_READ
	LD	A,59
	CALL	GPUTMS
	JP	RFALSE

F_NAME:
	LD	DE,WCB6
	LD	HL,FCB5
	CALL	INPUT3
	AND	A
	RET	NZ
	CALL	PUTBAR
	RET


F_INS:
	LD	DE,WCB7
	LD	HL,FCB9
	CALL	INPUT3
	AND	A
	RET	NZ
	LD	DE,FCB9
	CALL	AOPEN
	RET	NZ
	LD	A,(TXTMD)
	AND	A
	JP	NZ,FISJ0

;-------- DEC SHEEK 
	LD	HL,1
	LD	(PJUNK0),HL
	LD	HL,0
	LD	(PJUNK1),HL
	LD	HL,FCB9+33
	LD	DE,PJUNK0
	LD	BC,FCB9+33
	CALL	DBLSUB

;-------- CONNECT SCB TO FCB
FISJ0:
	LD	HL,(FCB9+33)
	LD	DE,(FCB9+35)
	ADD	HL,DE
	LD	A,H
	OR	L
	RET	Z

	LD	HL,SCB5
	LD	DE,EXCDTA+100H
	LD	BC,25
	LDIR

	XOR	A
	LD	(SCB5+23),A
	LD	DE,SCB5
	CALL	RRST
	LD	A,3
	LD	(SCB5+23),A
	LD	HL,FCB9
	LD	(SCB5+20),HL

	LD	HL,FCB9+33
	LD	DE,SCB5+4
	LD	BC,4
	LDIR
	LD	HL,FCB9+33
	LD	DE,EXCDTA+120H
	LD	BC,4
	LDIR
	LD	A,0FFH
	LD	(EXCDTA+124H),A
	LD	BC,5
	LD	DE,SCB5
	LD	HL,EXCDTA+120H
	CALL	WDST
	CALL	PASTE

	LD	HL,EXCDTA+100H
	LD	DE,SCB5
	LD	BC,25
	LDIR
	RET

;------------------------ SUBACTIONS
CMK:
	CALL	MKANEL
	LD	HL,(LINK0)
	LD	BC,(CSP12)
	LD	DE,(CSP11)
	CALL	INCTX2
	CALL	S_CSP
CMK4:
	LD	A,(CSP7)
	AND	A
	CALL	NZ,LINUP2
	LD	A,(CSP8)
	AND	A
	CALL	NZ,LINDW2
	LD	BC,(CSP4)
	LD	DE,(CSP2)
	CALL	PUTUP
	LD	DE,(CSRP)
	CALL	S_CSP
	RET

CMK2:
	LD	DE,(CSRP)
	LD	(JUNK3),DE
	CALL	MKANEL
	LD	HL,(LINK0)
	LD	DE,(LINK3)
	ADD	HL,DE
	LD	BC,(CSP12)
	LD	DE,(CSP11)
	CALL	INCTX2
	CALL	S_CSP
	LD	A,(CSP7)
	AND	A
	CALL	NZ,LINUP2
	LD	A,(CSP8)
	AND	A
	CALL	NZ,LINDW2
	LD	BC,(LINK0)
	LD	DE,(JUNK3)
	CALL	PUTUP
	LD	DE,(CSRP)
	CALL	S_CSP
	CALL	S_CSP9
	RET

CMK3:
	CALL	CMK
	CALL	S_CSP9
	RET

CHLMEM:
	LD	A,(HL)
	CP	B
	JP	Z,CHLMEMJ0
	LD	A,B
	LD	(HL),A
	LD	A,6
	RET
CHLMEMJ0:
	LD	A,C
	LD	(HL),A
	LD	A,7
	RET

INPSD:
	LD	DE,WCB4
	LD	HL,SDATA
	CALL	INPUT1
	RET

INPRD:
	LD	DE,WCB5
	LD	HL,RDATA
	CALL	INPUT1
	RET

CPUT1:
	LD	B,A
	PUSH	BC
	CALL	S_TXMD
	CALL	PUTTX3
	CALL	PUTBAR
	CALL	CSRSET
	CALL	RSTMS1
	POP	BC
	LD	A,C
	PUSH	BC
	CALL	PUTMS
	POP	AF
	CALL	PUTMS
	LD	A,10
	CALL	PUTMS
	RET

STDPMS:
	PUSH	AF
	CALL	RSTMS1
	POP	AF
	CALL	EPUTMS
	RET

EXCDMS:
	LD	A,22
	CALL	GPUTMS
	CALL	WAIT1
	JP	EXCDMS
	RET

;----------------------- PRINTER

RSTTXT:
	LD	A,0
	CALL	SRCCDT
	LD	(ANKSCD),DE
	LD	A,4
	CALL	SRCCDT
	LD	(JISSCD),DE
	RET

SRCCDT:
	ADD	A,A
	LD	B,A
	LD	A,(PRTMD)
	ADD	A,B
	LD	DE,CDTABL
	CALL	SRCMSD
	RET

M2VRH:
	LD	A,B
	OR	C
	JP	Z,RTRUE
	PUSH	HL
	ADD	HL,BC
	CALL	INEG
	LD	(VJUNK0),HL
	POP	HL
	EX	DE,HL
BYTEPUT:
	LD	HL,(VJUNK0)
	ADD	HL,DE
	JP	C,RTRUE
	CALL	PUTFONT
	JP	BYTEPUT

PUTFONT:
	LD	A,(DE)
	INC	DE
	LD	L,A
	CALL	CHK2BYTE
	LD	A,L
	JP	NZ,FONT0
	LD	H,A
	LD	A,(DE)
	INC	DE
	LD	L,A
	JP	FONT1

CHK2BYTE:
; CP 13
; JP Z,RTRUE
	CP	129
	JP	C,RFALSE
	CP	160
	JP	C,RTRUE
	CP	223
	JP	C,RFALSE
	CP	254
	JP	C,RTRUE
	JP	RFALSE

FONT0:;ANK PUT
	PUSH	HL
	PUSH	DE
	PUSH	BC
	CALL	ANKMD
	LD	IX,00A5H
	CALL	GOBIOS
	POP	BC
	POP	DE
	POP	HL
	RET

FONT1:;SJIS PUT
	PUSH	HL
	PUSH	DE
	PUSH	BC
	CALL	SJIS2J
	CALL	JISMD
	PUSH	DE
	LD	A,D
	LD	IX,00A5H
	CALL	GOBIOS
	POP	DE
	LD	A,E
	LD	IX,00A5H
	CALL	GOBIOS
	POP	BC
	POP	DE
	POP	HL
	RET

ANKMD:
	PUSH	AF
	LD	A,(KPRTMD)
	AND	A
	CALL	NZ,ANKRST
	POP	AF
	RET

JISMD:
	PUSH	DE
	LD	A,(KPRTMD)
	AND	A
	CALL	Z,JISRST
	POP	DE
	RET

ANKRST:
	XOR	A
	LD	(KPRTMD),A
	LD	DE,(ANKSCD)
	JP	PTPRN

JISRST:
	LD	A,0FFH
	LD	(KPRTMD),A
	LD	DE,(JISSCD)
	JP	PTPRN

PTPRN:
	LD	A,(DE)
	AND	A
	JP	Z,RTRUE
	PUSH	DE
	LD	IX,00A5H
	CALL	GOBIOS
	POP	DE
	INC	DE
	JP	PTPRN

RSTPRT:
	CALL	RSTTXT
	CALL	ANKRST
	CALL	CHKPRT
	JP	NZ,RSPJ0
	LD	A,61
	CALL	GPUTMS
	JP	RTRUE
RSPJ0:
	LD	A,60
	CALL	GPUTMS
	JP	RFALSE

CHKPRT:
	LD	IX,00A8H
	CALL	GOBIOS
	AND	A
	JP	Z,RFALSE
	JP	RTRUE

CLSPRT:
	LD	A,62
	CALL	FPUTMS
	LD	DE,CRLFDB
	CALL	PTPRN
	JP	RTRUE

SJIS2J:
;HL<-SJIS JIS->DE
	LD	A,H
	CP	09FH
	JP	C,SJ2JJ0
	SUB	40H
SJ2JJ0:
	SUB	70H
	ADD	A,A
	LD	C,A

	LD	A,L
	CP	80H
	ADC	A,0
	CP	9FH
	JP	NC,SJ2JJ1
	DEC	C
	ADD	A,5EH
SJ2JJ1:
	SUB	7EH
	LD	D,C
	LD	E,A
	RET

	END

;--------------------- JUNK SUB

FATREAD:
	LD	HL,0
	LD	B,50
GXDJ0:
	PUSH	HL
	PUSH	BC
	CALL	RFAT

	LD	A,4
	LD	DE,FEPBUF+1
	CALL	HL2TXS
	LD	A,6
	LD	(FEPBUF),A
	LD	HL,0A0DH
	LD	(FEPBUF+5),HL
	CALL	ANKW

	POP	BC
	POP	HL
	INC	HL
	DJNZ	GXDJ0
	RET

FATWRITE:
	LD	HL,0
	LD	B,50
GXXJ0:
	PUSH	HL
	PUSH	BC
	LD	DE,0
	CALL	WFAT

	POP	BC
	POP	HL
	INC	HL
	DJNZ	GXXJ0
	RET

;-----------------------JUNK SUB END

