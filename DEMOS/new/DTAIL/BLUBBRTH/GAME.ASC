@REMON
~' 2004, [D-Tail]
~' Don't care what you do with this, as long as my name
~' remains between the @REM tags.
@REMOFF

@DEFINE	TEMP0	V(0)
@DEFINE	TEMP1	V(1)
@DEFINE	TEMP2	V(2)
@DEFINE	TEMP3	V(3)
@DEFINE	TEMP4	V(4)
@DEFINE	TEMP5	V(5)
@DEFINE	TEMP6	V(6)
@DEFINE	TEMP7	V(7)

@DEFINE	PATTERN_COUNTER	V(8)
@DEFINE	PAGE	V(9)

@DEFINE	SPEED	V(10)
@DEFINE	MOVE	V(11)
@DEFINE	O2	V(12)
@DEFINE	TIMER	V(13)
@DEFINE	FRAME	V(14)
@DEFINE	MAN_X	V(15)
@DEFINE	MAN_Y	V(16)
@DEFINE	LOWRING	V(17)
@DEFINE	CUR_HEIGHT	V(18)

@DEFINE	C_VDP27	V(19)
@DEFINE	C_VDP28	V(20)

@DEFINE	S_ATTR	T(0)
@DEFINE	S_COLR	T(0)-512
@DEFINE	S_GENR	T(1)


~	color	15,0,0:
	screen	5:
	setpage	0,2:
	bload	"PATTERNS.GE5",s:
	color=restore:
	setpage	0,0:
	defint	E,P,V,T:
	dim	P(15),V(20),T(1)

~	_turbo	on(P(),V(),T())

~	dim	F$(1):
	@S_ATTR=(VDP(5)
	and	252)*2^7+VDP(12)*2^15:
	@S_GENR=VDP(6)*2^11:
	F$(0)="CREATED.MAP":
	E=usr(31):
	P(2)=7:
	P(3)=0:
	P(4)=16384:
	E=usr(33):
	E=usr(32)

~	@C_VDP27=0:
	@C_VDP28=0:
	@SPEED=128:
	@O2=56:
	@MAN_Y=128:
	@MAN_X=124:
	@FRAME=0:
	@CUR_HEIGHT=-16:
	vdp(26)=3:
	vdp(19)=4:
	vdp(10)=vdp(10)
	and	127:
	vdp(2)=vdp(2)
	or	32:
	vdp(1)=vdp(1)
	or	2

~	F$(0)="MAN.SPR":
	E=usr(31):
	P(2)=0:
	P(3)=@S_GENR:
	P(4)=2048:
	E=usr(34):
	E=usr(32):
	for	I=0
	to	31:
	vpoke	@S_COLR+I,15:
	vpoke	@S_COLR+I+32,9:
	next	I
~	for	I=0
	to	47:
	vpoke	@S_COLR+64+I+0,1:
	vpoke	@S_COLR+64+I+48,2:
	vpoke	@S_COLR+64+I+96,9:
	vpoke	@S_COLR+64+I+144,10:
	vpoke	@S_COLR+64+I+192,1:
	vpoke	@S_COLR+64+I+240,2:
	vpoke	@S_COLR+64+I+288,9:
	vpoke	@S_COLR+64+I+336,10:
	next	I:

~	for	I=0
	to	3:
	vpoke	@S_ATTR+4*I+0,4+16*(I
	and	1):
	vpoke	@S_ATTR+4*I+1,12:
	vpoke	@S_ATTR+4*I+2,4*I:
	next	I

	'[PLACE FIGURE]`
~	for	I=0
	to	7:
	vpoke	@S_ATTR+4*I+16+0,(-64+(@CUR_HEIGHT\2)*(@CUR_HEIGHT\2))+@MAN_Y+4*(I
	and	4)-1:
	vpoke	@S_ATTR+4*I+16+1,@MAN_X:
	vpoke	@S_ATTR+4*I+16+2,4*(3*(I
	and	3)+4*(I
	and	4)+32)+@TEMP0:
	next	I

~	P(0)=7:
	for	Y=0
	to	11:
	for	X=0
	to	16:
	P(1)=1024*Y+X:
	E=usr(2):
	if	X=16
	then	@PAGE=1
	else	@PAGE=0

~	copy	(16*(P(2)
	and	15),P(2)
	and	240)-(16*(P(2)
	and	15)+15,(P(2)
	and	240)+15),2
	to	((16*X)
	and	255,16*Y),@PAGE:
	next	X,Y

~PRG_CYCLE:	if	strig(0)
	then
	gosub	~JUMP
	else
	gosub	~LOWER


~	@TEMP0=stick(0):
	if	@TEMP0=3
	then
	gosub	~SPEED_INCREMENT
	else
	if	@TEMP0=7
	then
	gosub	~SPEED_DECREMENT
	else
	if	@TEMP0=0
	then
	gosub	~SPEED_SLOW_DOWN

~	if	inkey$=chr$(27)
	then	~END
	else
	gosub	~DRAW_GUY

~	gosub	~VSYNC:
	@TIMER=(@TIMER+1)
	and	7:
	if	@TIMER=0
	then
	gosub	~DECREASE_O2

~	goto	~PRG_CYCLE



'---------------------=[SPEED MEASUREMENTS]=-----------------------------------
~SPEED_INCREMENT:	if	@SPEED<128
	then	@SPEED=@SPEED+4:
	goto	~MOVE_GUY
	else
	if	(@SPEED
	and	63)
	then	@SPEED=@SPEED
	or	64
~	if	@SPEED<256
	then	@SPEED=@SPEED+1:
	goto	~MOVE_GUY
	else	~MOVE_GUY

~SPEED_DECREMENT:	if	@SPEED>128
	then	@SPEED=@SPEED-4:
	goto	~MOVE_GUY
	else
	if	(@SPEED
	and	63)
	then	@SPEED=@SPEED
	and	191
~	if	@SPEED>0
	then	@SPEED=@SPEED-1:
	goto	~MOVE_GUY
	else	~MOVE_GUY

~SPEED_SLOW_DOWN:	if	@SPEED>128
	then	@SPEED=@SPEED-2
	and	254:
	goto	~MOVE_GUY
	else
	if	@SPEED<128
	then	@SPEED=@SPEED+2
	and	254:
	goto	~MOVE_GUY



'---------------------=[MOVE SPRITES ACCORDINGLY]=-----------------------------
~MOVE_GUY:	@MOVE=(@SPEED-96)\64:
	if	@MOVE=0
	then	return
	else
	for	I=1
	to	abs(@MOVE):
	if	@MOVE<0
	then
	gosub	~LEFT
	else
	gosub	~RIGHT

~	next	I:
	return

~DRAW_GUY:	if	@FRAME<64
	then	@TEMP0=0:
	goto	~DRAW
	else
	if	@FRAME<128
	then	@TEMP0=4:
	goto	~DRAW
	else
	if	@FRAME<192
	then	@TEMP0=0:
	goto	~DRAW
	else
	@TEMP0=8

~DRAW:	for	I=0
	to	7:
	vpoke	@S_ATTR+4*I+16+0,(-64+(@CUR_HEIGHT\2)*(@CUR_HEIGHT\2))+@MAN_Y+4*(I
	and	4)-1:
	vpoke	@S_ATTR+4*I+16+1,@MAN_X:
	next	I:
	if	@MOVE>0
	then
	for	I=0
	to	7:
	vpoke	@S_ATTR+4*I+16+2,4*(3*(I
	and	3)+4*(I
	and	4)+32)+@TEMP0:
	next	I:
	return
~	if	@MOVE<0
	then
	for	I=0
	to	7:
	vpoke	@S_ATTR+4*I+16+2,4*(3*(I
	and	3)+4*(I
	and	4)+4)+@TEMP0:
	next	I:
	return
	else	return

~JUMP:	if	@LOWRING
	then	~LOWER
	else
	gosub	~CHECK_ABOVE:
	if	@TEMP0
	then	~LOWER
	else
	@CUR_HEIGHT=@CUR_HEIGHT+1:
	@FRAME=127:
	if	@CUR_HEIGHT>0
	then	@LOWRING=1
~	if	@CUR_HEIGHT>16
	then	@CUR_HEIGHT=-16:
	return
	else	return

~LOWER:	gosub	~CHECK_BELOW:
	if	@TEMP0
	then	@LOWRING=0:
	@MAN_Y=(@MAN_Y-64+(@CUR_HEIGHT\2)*(@CUR_HEIGHT\2))
	and	240:
	@CUR_HEIGHT=-16:
	return
	else
	@CUR_HEIGHT=@CUR_HEIGHT-1:
	if	@CUR_HEIGHT<-16
	then	@CUR_HEIGHT=-16:
	@LOWRING=0:
	return
	else	return



~DECREASE_O2:	@O2=@O2-1:
	if	@O2<0
	then	~END
	else
	@TEMP0=1-(@O2\2+2
	and	16)\16:
	vpoke	@S_GENR+64+32*@TEMP0+15-(@O2\2+2
	and	15),0:
	vpoke	@S_GENR+64+32*@TEMP0+31-(@O2\2+2
	and	15),0:
	return



'---------------------=[COLLISION DETECTION ROUTINES]=-------------------------
~CHECK_ABOVE:	@TEMP1=(@MAN_Y-64+((@CUR_HEIGHT+2)\2)*((@CUR_HEIGHT+2)\2))
	and	240:
	P(0)=7:
	P(1)=1024*@TEMP1+(@PATTERN_COUNTER+128
	and	15)*16:
	E=usr(2):
	if	P(2)>47
	and	P(2)<96
	then	@TEMP0=1:
	return
	else	@TEMP0=0:
	return


	return

~CHECK_LEFT:	@TEMP0=0:
	return

~CHECK_RIGHT:	@TEMP0=0:
	return

~CHECK_BELOW:	@TEMP0=0:
	return



'---------------------=[SCROLL AND REPAINT ROUTINES]=--------------------------
~RIGHT:	if	@PATTERN_COUNTER=496*12
	then	return
	else	P(0)=7:
	P(1)=(@PATTERN_COUNTER
	and	15)*1024+(@PATTERN_COUNTER+272)\16:
	E=usr(2):
	@TEMP0=(@PATTERN_COUNTER+272)	' X Coordinate to copy to
	and	496:
	@TEMP1=16*(@PATTERN_COUNTER	' Y Coordinate to copy to
	and	15):
	if	@TEMP0>240	' Determine on which page
	then	@PAGE=1
	else	@PAGE=0

~	copy	(16*(P(2)
	and	15),P(2)
	and	240)-(16*(P(2)
	and	15)+15,(P(2)
	and	240)+15),2
	to	(@TEMP0
	and	255, @TEMP1),@PAGE

~	@PATTERN_COUNTER=@PATTERN_COUNTER+1:
	@C_VDP28=(@C_VDP28-1)
	and	7:
	vdp(28)=@C_VDP28:
	if	@C_VDP28=7
	then	@C_VDP27=(@C_VDP27+1)
	and	63:
	vdp(27)=@C_VDP27
~	@FRAME=(@FRAME+4)
	and	255:
	return

~LEFT:	if	@PATTERN_COUNTER=0
	then	return
	else	P(0)=7:
	P(1)=((@PATTERN_COUNTER
	and	15)*1024+(@PATTERN_COUNTER-17)\16)
	and	16383:
	E=usr(2):
	@TEMP0=(@PATTERN_COUNTER-17)	' X Coordinate to copy to
	and	496:
	@TEMP1=16*(@PATTERN_COUNTER	' Y Coordinate to copy to
	and	15):
	if	@TEMP0>240	' Determine on which page
	then	@PAGE=1
	else	@PAGE=0

~	copy	(16*(P(2)
	and	15),P(2)
	and	240)-(16*(P(2)
	and	15)+15,(P(2)
	and	240)+15),2
	to	(@TEMP0
	and	255, @TEMP1),@PAGE

~	@PATTERN_COUNTER=@PATTERN_COUNTER-1:
	@C_VDP28=(@C_VDP28+1)
	and	7:
	vdp(28)=@C_VDP28:
	if	@C_VDP28=0
	then	@C_VDP27=(@C_VDP27-1)
	and	63:
	vdp(27)=@C_VDP27
~	@FRAME=(@FRAME+4)
	and	255:
	return


'---------------------=[OTHER MANDATORY ROUTINES]=-----------------------------
@REMON
~VSYNC:	'#I &HFB,&H00,&H76,&HC9
@REMOFF



'---------------------=[END OF PROGRAM]=---------------------------------------
~END:	_turbo	off
~	screen	0:
	end

