
                             THE V9958-REGISTERS
                            =====================
               VDP() REG   b7   b6   b5   b4   b3   b2   b1   b0

                 8    0     F   SD    C   S4   S3   S2   S1   S0
                -1    1     0    0   I4   I3   I2   I1   I0   FH
                -2    2    TR   VR   HR   BD    0    0   EO   CE
                -3    3    X7   X6   X5   X4   X3   X2   X1   X0
                -4    4     0    0    0    0    0    0   X9   X8
                -5    5    Y7   Y6   Y5   Y4   Y3   Y2   Y1   Y0
                -6    6     0    0    0    0    0    0   Y9   Y8
                -7    7    C7   C6   C5   C4   C3   C2   C1   C0
                -8    8    BX7  BX6  BX5  BX4  BX3  BX2  BX1  BX0
                -9    9     0    0    0    0    0    0   BX9  BX8

                 0    0     0   DG    0   IE1  M5   M4   M3    0
                 1    1     0   BLK  IE0  M1   M2    0   SZ   MAG
                 2    2     0   A16  A15  A14  A13  A12  A11  A10
                 3    3    B13  B12  B11  B10  B9   B8   B7   B6
                 4    4     0    0   C16  C15  C14  C13  C12  C11
                 5    5    D14  D13  D12  D11  D10  D9   D8   D7
                 6    6     0    0   E16  E15  E14  E13  E12  E11
                 7    7    TC3  TC2  TC1  TC0 BDC3 BDC2 BDC1 BDC0
                 9    8     0    0   TP   CBD VRS1 VRS0  SPD  B/W
                10    9    LN    0  SYM1 SYM0  IL   EO  NTSC  DCD
                11   10     0    0    0    0    0   B16  B15  B14
                12   11     0    0    0    0    0    0   D16  D15
                13   12    C3   C2   C1   C0   BC3  BC2  BC1  BC0
                14   13    ON3  ON2  ON1  ON0  OF3  OF2  OF1  OF1
                15   14     0    0    0    0    0   F16  F15  F14
                16   15     0    0    0    0   RS3  RS2  RS1  RS0
                17   16     0    0    0    0   C3   C2   C1   C0
                18   17    AII   0   RC5  RC4  RC3  RC2  RC1  RC0
                19   18    dV3  dV2  dV1  dV0  dH3  dH2  dH1  dH0
                20   19    IL7  IL6  IL5  IL4  IL3  IL2  IL1  IL0
                21   20     0    0  CBX5 CBX4 CBX3 CBX2 CBX1 CBX0
                22   21     0    0  CBY5 CBY4 CBY3 CBY2 CBY1 CBY0
                23   22     0    0  CBZ5 CBZ4 CBZ3 CBZ2 CBZ1 CBZ0
                24   23    DO7  DO6  DO5  DO4  DO3  DO2  DO1  DO0
                26   25     0   CMD  VDS  YAE  YJK  WTE  MSK  SP2
                27   26     0    0    H8   H7   H6   H5   H4   H3
                28   27     0    0    0    0    0    H0   H1   H2

                33   32    SX7  SX6  SX5  SX4  SX3  SX2  SX1  SX0
                34   33     0    0    0    0    0    0    0   SX8
                35   34    SY7  SY6  SY5  SY4  SY3  SY2  SY1  SY0
                36   35     0    0    0    0    0    0   SY9  SY8
                37   36    DX7  DX6  DX5  DX4  DX3  DX2  DX1  DX0
                38   37     0    0    0    0    0    0    0   DX8
                39   38    DY7  DY6  DY5  DY4  DY3  DY2  DY1  DY0
                40   39     0    0    0    0    0    0   DY9  DY8
                41   40    NX7  NX6  NX5  NX4  NX3  NX2  NX1  NX0
                42   41     0    0    0    0    0    0   NX9  NX8
                43   42    NY7  NY6  NY5  NY4  NY3  NY2  NY1  NY0
                44   43     0    0    0    0    0    0   NY9  NY8
                45   44    CL7  CL6  CL5  CL4  CL3  CL2  CL1  CL0
                46   45     0   MXC  MXD  MXS  DIY  DIX  EQ   MAJ
                47   46    CM3  CM2  CM1  CM0  LO3  LO2  LO1  LO0

F       - Vertical scanning interrupt flag (1: interrupt)
SD      - 5th or 9th sprite detected
C       - Sprite-collision detected
S4/0    - Sprite-number of 5th or 9th sprite
I4/0    - ID-number of the MSX-Video
FH      - Horizontal scanning interrupt flag (1: interrupt)
TR      - Transfer ready flag (1: ready)
VR      - Vertical scanning line timing flag (1: scanning)
HR      - Horizontal scanning line timing flag (1: scanning)
BD      - Boundary colour detect flag of search command (1: colour found)
EO      - Display field flag (0: display first field)
CE      - Command Executing flag (0: ready)
X9/0    - X-coordinate of sprite-collision, mouse or lightpen
Y9/0    - Y-coordinate of sprite-collision, mouse or lightpen
C7/0    - Colour-read register of point command
BX9/0   - Border X-coordinate of search command

DG      - Digitize
IE0     - Enable Vertical Retrace Interrupt
IE1     - Enable Horizontal Retrace Interrupt
D       - External VDP-input
M5/1    - Screen select
          00000 Screen 1
          00001 Screen 0 (WIDTH 40)
          00010 Screen 3
          00100 Screen 2
          01000 Screen 4
          01001 Screen 0 (WIDTH 80)
          01100 Screen 5
          10000 Screen 6
          10100 Screen 7
          11100 Screen 8
BLK     - Enable Display
SZ      - Set sprite size 16 x 16
MAG     - Magnify sprites
A16/10  - Pattern name table base address
B16/6   - Color table base address
C16/11  - Pattern generator table base address
D16/7   - Sprite attribute tabele base adress
E16/11  - Sprite pattern generator table base adress
TC3/0   - Text Colour
BCD3/0  - Back Drop Colour
TP      - Non-transparant mode
CBD     - Set Color Bus to input mode
VRS1/0  - Video RAM Select
          00 - 1*16 KB
          01 - 4*16 KB
          10 - 1*64 KB
          11 - 64 KB High Speed
SPD     - Disable sprite display
B/W     - Set black and white in 32 tones
LN      - Set screen height to 212 (0 = 192)
SYM1/0  - Synchronization mode
          00 - Intern
          01 - Mix
          10 - Extern (=> Digitize)
          11 - None
IL      - Interlace
EO      - Even or Odd Display  (0: one page; 1: two pages)
NTSC    - TV mode select (0: NTSC; 1: PAL)
DCD     - Dot Clock Direction (0: output)
C3/0    - Colour
BC3/0   - Back Colour
ON3/0   - Blink on  (1 period = 0.20 s)
OF3/0   - Blink off (1 period = 0.20 s)
F16/14  - VRAM acess base address
RS3/0   - Status-register number
C3/0    - Color code
AII     - Auto increment (0: on; 1:inhibit)
RC5/0   - Control-register number
dV3/0   - Vertical adjust display
dH3/0   - Horizontal adjust display
IL7/0   - Interrupt line
CBX5/0  - Color burst value of phase 0   (Preset: 00000000b)
CBY5/0  - Color burst value of phase 1/3 (Preset: 00111011b)
CBZ5/0  - Color busrt value of phase 2/3 (Preset: 00000101b)
DO7/0   - Display offset
CMD     - Command mode (0: normal; 1: screen 2-4 as screen 8)
VDS     - ???
YAE     - Colour palette RGB output
YJK     - YJK system
WTE     - Send a wait-signal to the CPU
MSK     - Mask 8 pixels at edges
SP2     - Screen width for hor. scroll (0: one page; 1: two pages)
H8-0    - Scroll screen horizontall

SX8/0   - Source x-coordinate
SY9/0   - Source y-coordinate
DX8/0   - Destination x-coordinate
DY9/0   - Destination y-coordinate
NX9/0   - Number of x-dots
NY9/0   - Number of y-dots
CL7/0   - Colour code
MXC     - Select access memory
          0: Video RAM
          1: Expansion RAM
MXD     - Select destination memory
          0: Video RAM
          1: Expansion RAM
MXS     - Select source memory
          0: Video RAM
          1: Expansion RAM
DIX     - Direction for NX from X-coordinate
          0: Right
          1: Left
DIY     - Direction for NY from y-coordinate
          0: Down
          1: Up
EQ      - Select execution stop for search command
          0: Stop if another colour is found
          1: Stop if colour is found
MAJ     - Direction for long-side for line command
          0: Along x-axis
          1: Along y-axis
CM3/0   - Command                                    SR DS NM CL MD MS DI LO
          1111 HMMC - High-speed move CPU  to VRAM    -  *  *  *  *  -  *  -
          1110 YMMM - High-speed move VRAM to VRAM    Y  *  Y  -  *  -  *  -
          1101 HMMM - High-speed move VRAM to VRAM    *  *  *  -  *  *  *  -
          1100 HMMV - High-speed move VDP  to VRAM    -  *  *  *  *  -  *  -
          1011 LMMC - Logical move CPU to VRAM        -  *  *  *  *  -  *  *
          1010 LMCM - Logical move VRAM to CPU        *  -  *  -  *  -  *  -
          1001 LMMM - Logical move VRAM to VRAM       *  *  *  -  *  *  *  *
          1000 LMMV - Logical move VDP  to VRAM       -  *  *  *  *  -  *  *
          0111 LINE - Draws a line                    -  *  *  *  * MA  *  *
          0110 SRCH - Searches for a colour           *  -  -  *  * EQ  X  -
          0101 PSET - Draws a dot                     -  *  -  *  *  -  -  *
          0100 PINT - Returns the colour of a dot     *  -  -  -  -  *  -  -
          0000 STOP - Aborts any command              -  -  -  -  -  -  -  -
LO3/1   - Logical operation
          0000 IMP         1000 TIMP
          0001 AND         1001 TAND
          0010 OR          1010 TOR
          0011 XOR         1011 TXOR
          0100 NOT         1100 TNOT

------------------
Alias: Zelly
Group: Mayhem
Tasks: Code + Gfx
--------------------------------
Email: m.zellenrath@stud.tue.nl
Snail: Zelly
       Hoefakker 2
       4901 GC Oosterhout Nbr.
       The Netherlands
--------------------------------------------------------------------------
                      .--.--,           |
                      |  |  |  --, |  | |--, ,--, .-.-,
                      |  |  | ,--| |  | |  | |--' | | |
                      |  |  | `--` `--| |  | `--  | | |
                                    --'
                             - mastering chaos -
--------------------------------------------------------------------------
