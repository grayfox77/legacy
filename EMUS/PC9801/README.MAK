---------- fMSX98のコンパイルについて				ver1.1f 1996/08/31

　djgpp v1.12の環境を用意してください。
　最低限gcc/gas/makeが必要です。

(注) make.exeはdjgpp付属のものを使用してください。他のmakeがパスに設定され
ていると正常に動きません。(Turbo-C附属のものなど）

　cls2.com/chgmap.comの作成は、Turbo-assembler,Turbo-cを想定していますが、
　簡単なプログラムなのでどのコンパイラ/アセンブラにもすぐ移植できると思い
　ます(^^;

　fMSXをコンパイルするには、lha x src としてソースファイルを全て同じディレク
トリ(ここでは A:\FMSX とします)に展開した後、98版なら

　　A:\FMSX\>make aspp.exe
　　A:\FMSX\>cd pc98
　　A:\FMSX\PC98\>make

としてください。AT版は cd pc98 を cd pcat に変更するだけです。

chgmap.com(メガROMマッパ判別ヘッダ変更ユーティリティ)を作成するには，

　　A:\FMSX\>make chgmap.exe

として下さい。


--- aspp.exeについて

　asppはgaspをうまく使えなかった作者が適当に作成したas用プロファイラです(^^;
標準入出力を使用します。オプションはありません。入力ファイル中で以下のコマン
ドが使用できます。

.alias 実体 エイリアス名

.macro マクロ名 引数 [引数]...
	マクロ本体（引数はそのまま表記)
.endm

.include "ファイル名"

asppの著作権は作者が保有します。


--------------- 移植・改良に関して

　fMSX98は、386を搭載したシステム＋gccまたはその他の32bitCコンパイラが走る環境
には比較的容易に移植することが出来ます(TOWNS、AT互換機、Linux、FreeBSDなど)。
その他のシステムに移植する場合はオリジナルのfMSXからの方が簡単だと思いますが、
fMSX98の方が多少機能拡張してありますので機能が制限されます。
　また各種グラフィックボード・音源ボードに対応させる場合も同様です。

　移植する際に移植者が書かなければならないコードは、キーボード検出、画面表示制御、音源制御、フロッピーディスクの部分です。以下に関係する関数を示します。

InitMachine(void)
　各システムの初期設定を行います。

TrashMachine(void)
　InitMachine()で確保したメモリの解放等を行います。

PutImage(byte *)
　引数のポインタは、320*240または640*240バイトの大きさの画面イメージ
　(8bit/pixel)を持っていますので、それを実際に表示するルーチンです。
　ただしscreen8以外では必ず上位4bitを無視して下さい。

InitScrx()
　スクリーンモードを変えた時、システム側でこの関数を用いてフックすることが
出来ます。

ColorsScrx(byte)
　カラーパレットの変更はこの関数でフック出来ます。引数はパレット番号です。

RealDisk(reg *)
　PHYDIOのフックです。この関数で物理ドライブを操作して下さい。引数にはZ80
レジスタ構造体へのポインタが入っています。

Keyboard()
　キーボードの状態をKeys[][]配列に設定する関数です。

PSGOut()
SCCOut()
OPLLOut()
　各音源へのアクセスをフックします。音源の説明書とシステムの音声関係の
マニュアルを見比べて発音をエミュレートして下さい。