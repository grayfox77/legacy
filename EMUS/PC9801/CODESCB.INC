.data
	.align 4
Z80_Table_CB:
	.long RLC_B
	.long RLC_C
	.long RLC_D
	.long RLC_E
	.long RLC_H
	.long RLC_L
	.long RLC_xHL
	.long RLC_A
	.long RRC_B
	.long RRC_C
	.long RRC_D
	.long RRC_E
	.long RRC_H
	.long RRC_L
	.long RRC_xHL
	.long RRC_A
	.long RL_B
	.long RL_C
	.long RL_D
	.long RL_E
	.long RL_H
	.long RL_L
	.long RL_xHL
	.long RL_A
	.long RR_B
	.long RR_C
	.long RR_D
	.long RR_E
	.long RR_H
	.long RR_L
	.long RR_xHL
	.long RR_A
	.long SLA_B
	.long SLA_C
	.long SLA_D
	.long SLA_E
	.long SLA_H
	.long SLA_L
	.long SLA_xHL
	.long SLA_A
	.long SRA_B
	.long SRA_C
	.long SRA_D
	.long SRA_E
	.long SRA_H
	.long SRA_L
	.long SRA_xHL
	.long SRA_A
	.long NOP,NOP,NOP,NOP,NOP,NOP,NOP,NOP
	.long SRL_B
	.long SRL_C
	.long SRL_D
	.long SRL_E
	.long SRL_H
	.long SRL_L
	.long SRL_xHL
	.long SRL_A
	.long BIT0_B
	.long BIT0_C
	.long BIT0_D
	.long BIT0_E
	.long BIT0_H
	.long BIT0_L
	.long BIT0_xHL
	.long BIT0_A
	.long BIT1_B
	.long BIT1_C
	.long BIT1_D
	.long BIT1_E
	.long BIT1_H
	.long BIT1_L
	.long BIT1_xHL
	.long BIT1_A
	.long BIT2_B
	.long BIT2_C
	.long BIT2_D
	.long BIT2_E
	.long BIT2_H
	.long BIT2_L
	.long BIT2_xHL
	.long BIT2_A
	.long BIT3_B
	.long BIT3_C
	.long BIT3_D
	.long BIT3_E
	.long BIT3_H
	.long BIT3_L
	.long BIT3_xHL
	.long BIT3_A
	.long BIT4_B
	.long BIT4_C
	.long BIT4_D
	.long BIT4_E
	.long BIT4_H
	.long BIT4_L
	.long BIT4_xHL
	.long BIT4_A
	.long BIT5_B
	.long BIT5_C
	.long BIT5_D
	.long BIT5_E
	.long BIT5_H
	.long BIT5_L
	.long BIT5_xHL
	.long BIT5_A
	.long BIT6_B
	.long BIT6_C
	.long BIT6_D
	.long BIT6_E
	.long BIT6_H
	.long BIT6_L
	.long BIT6_xHL
	.long BIT6_A
	.long BIT7_B
	.long BIT7_C
	.long BIT7_D
	.long BIT7_E
	.long BIT7_H
	.long BIT7_L
	.long BIT7_xHL
	.long BIT7_A
	.long RES0_B
	.long RES0_C
	.long RES0_D
	.long RES0_E
	.long RES0_H
	.long RES0_L
	.long RES0_xHL
	.long RES0_A
	.long RES1_B
	.long RES1_C
	.long RES1_D
	.long RES1_E
	.long RES1_H
	.long RES1_L
	.long RES1_xHL
	.long RES1_A
	.long RES2_B
	.long RES2_C
	.long RES2_D
	.long RES2_E
	.long RES2_H
	.long RES2_L
	.long RES2_xHL
	.long RES2_A
	.long RES3_B
	.long RES3_C
	.long RES3_D
	.long RES3_E
	.long RES3_H
	.long RES3_L
	.long RES3_xHL
	.long RES3_A
	.long RES4_B
	.long RES4_C
	.long RES4_D
	.long RES4_E
	.long RES4_H
	.long RES4_L
	.long RES4_xHL
	.long RES4_A
	.long RES5_B
	.long RES5_C
	.long RES5_D
	.long RES5_E
	.long RES5_H
	.long RES5_L
	.long RES5_xHL
	.long RES5_A
	.long RES6_B
	.long RES6_C
	.long RES6_D
	.long RES6_E
	.long RES6_H
	.long RES6_L
	.long RES6_xHL
	.long RES6_A
	.long RES7_B
	.long RES7_C
	.long RES7_D
	.long RES7_E
	.long RES7_H
	.long RES7_L
	.long RES7_xHL
	.long RES7_A
	.long SET0_B
	.long SET0_C
	.long SET0_D
	.long SET0_E
	.long SET0_H
	.long SET0_L
	.long SET0_xHL
	.long SET0_A
	.long SET1_B
	.long SET1_C
	.long SET1_D
	.long SET1_E
	.long SET1_H
	.long SET1_L
	.long SET1_xHL
	.long SET1_A
	.long SET2_B
	.long SET2_C
	.long SET2_D
	.long SET2_E
	.long SET2_H
	.long SET2_L
	.long SET2_xHL
	.long SET2_A
	.long SET3_B
	.long SET3_C
	.long SET3_D
	.long SET3_E
	.long SET3_H
	.long SET3_L
	.long SET3_xHL
	.long SET3_A
	.long SET4_B
	.long SET4_C
	.long SET4_D
	.long SET4_E
	.long SET4_H
	.long SET4_L
	.long SET4_xHL
	.long SET4_A
	.long SET5_B
	.long SET5_C
	.long SET5_D
	.long SET5_E
	.long SET5_H
	.long SET5_L
	.long SET5_xHL
	.long SET5_A
	.long SET6_B
	.long SET6_C
	.long SET6_D
	.long SET6_E
	.long SET6_H
	.long SET6_L
	.long SET6_xHL
	.long SET6_A
	.long SET7_B
	.long SET7_C
	.long SET7_D
	.long SET7_E
	.long SET7_H
	.long SET7_L
	.long SET7_xHL
	.long SET7_A

.text

PFX_CB:
	M_RD_PC
	movzbl %al,%eax
	jmp Z80_Table_CB(,%eax,4)

.macro MM_X0 op,rg
	.align 4,0x90
oprg:	M_op rg
.endm

.macro MM_X1 op
	MM_X0 op,_B
	MM_X0 op,_C
	MM_X0 op,_D
	MM_X0 op,_E
	MM_X0 op,_H
	MM_X0 op,_L
	MM_X0 op,_A
.endm

	MM_X1 RLC
	MM_X1 RRC
	MM_X1 RL
	MM_X1 RR
	MM_X1 SRA
	MM_X1 SLA
	MM_X1 SRL

	.align 4,0x90
RLC_xHL:
	movw _HL,%di
	pushl %edi
	M_RDMEM
	popl %edi
	rolb $1,%al
	sbbb %bl,%bl
	andb C_FLAG,%bl
	orb %al,%al
	pushf
	pushl %ebx
	M_WRMEM
	popl %ebx
	popl %eax
	andb $0b11101100,%al
	orb %bl,%al
	movb %al,_F
	jmp Ret_Z80

	.align 4,0x90
RRC_xHL:
	movw _HL,%di
	pushl %edi
	M_RDMEM
	popl %edi
	rorb $1,%al
	sbbb %bl,%bl
	andb C_FLAG,%bl
	orb %al,%al
	pushf
	pushl %ebx
	M_WRMEM
	popl %ebx
	popl %eax
	andb $0b11101100,%al
	orb %bl,%al
	movb %al,_F
	jmp Ret_Z80

	.align 4,0x90
RL_xHL:
	movw _HL,%di
	pushl %edi
	M_RDMEM
	popl %edi
	movb _F,%ah
	rcrb $1,%ah
	rclb $1,%al
	sbbb %bl,%bl
	andb C_FLAG,%bl
	orb %al,%al
	pushf
	pushl %ebx
	M_WRMEM
	popl %ebx
	popl %eax
	andb $0b11101100,%al
	orb %bl,%al
	movb %al,_F
	jmp Ret_Z80

	.align 4,0x90
RR_xHL:
	movw _HL,%di
	pushl %edi
	M_RDMEM
	popl %edi
	movb _F,%ah
	rcrb $1,%ah
	rcrb $1,%al
	sbbb %bl,%bl
	andb C_FLAG,%bl
	orb %al,%al
	pushf
	pushl %ebx
	M_WRMEM
	popl %ebx
	popl %eax
	andb $0b11101100,%al
	orb %bl,%al
	movb %al,_F
	jmp Ret_Z80

	.align 4,0x90
SLA_xHL:
	movw _HL,%di
	pushl %edi
	M_RDMEM
	popl %edi
	addb %al,%al
	pushf
	M_WRMEM
	popl %eax
	andb $0b11101101,%al
	movb %al,_F
	jmp Ret_Z80

	.align 4,0x90
SRA_xHL:
	movw _HL,%di
	pushl %edi
	M_RDMEM
	popl %edi
	movb %al,%bl
	andb C_FLAG,%bl
	sarb $1,%al
	pushf
	pushl %ebx
	M_WRMEM
	popl %ebx
	popl %eax
	andb $0b11101100,%al
	orb %bl,%al
	movb %al,_F
	jmp Ret_Z80

	.align 4,0x90
SRL_xHL:
	movw _HL,%di
	pushl %edi
	M_RDMEM
	popl %edi
	movb %al,%bl
	andb C_FLAG,%bl
	shrb $1,%al
	pushf
	pushl %ebx
	M_WRMEM
	popl %ebx
	popl %eax
	andb $0b11101100,%al
	orb %bl,%al
	movb %al,_F
	jmp Ret_Z80

.macro M_BIT_xHL bit
	.align 4,0x90
BITbit_xHL:
	movw _HL,%di
	M_ADDR
	M_BIT bit,(%edi)
	.align 4,0x90
SETbit_xHL:
	movw _HL,%di
	pushl %edi
	M_RDMEM
	popl %edi
	movb $0b00000001,%ah
	rolb $bit,%ah
	orb %ah,%al
	M_WRMEM
	jmp Ret_Z80
	.align 4,0x90
RESbit_xHL:
	movw _HL,%di
	pushl %edi
	M_RDMEM
	popl %edi
	movb $0b11111110,%ah
	rolb $bit,%ah
	andb %ah,%al
	M_WRMEM
	jmp Ret_Z80
.ENDM

	M_BIT_xHL 0
	M_BIT_xHL 1
	M_BIT_xHL 2
	M_BIT_xHL 3
	M_BIT_xHL 4
	M_BIT_xHL 5
	M_BIT_xHL 6
	M_BIT_xHL 7

.macro MM_X2 op,rg,bit
	.align 4,0x90
opbitrg:	M_op bit,rg
.endm

.macro MM_X3 op,bit
	MM_X2 op,_B,bit
	MM_X2 op,_C,bit
	MM_X2 op,_D,bit
	MM_X2 op,_E,bit
	MM_X2 op,_H,bit
	MM_X2 op,_L,bit
	MM_X2 op,_A,bit
.endm

.macro MM_X4 op
	MM_X3 op,0
	MM_X3 op,1
	MM_X3 op,2
	MM_X3 op,3
	MM_X3 op,4
	MM_X3 op,5
	MM_X3 op,6
	MM_X3 op,7
.endm

	MM_X4 BIT
	MM_X4 RES
	MM_X4 SET

